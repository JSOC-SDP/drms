		irisdc:/home/prodtest/cvs/IRIS/doc/iris_lev0_on_front_back_end.txt

The "real" IRIS datacapture machine is irisdc. This is called the front
end machine. It runs /home/prodtest/cvs/IRIS/proj/datacapture/scripts/socdciris
which in turn runs ingest_lev0_irisdc. This is as user prodtest.
/home/prodtest/cvs/IRIS/proj/lev0/apps/ingest_lev0_irisdc.c is normally edited
on irisdc. It must be coded to run on both the frontend and the backend
(cl1n001) machines. It is run on the frontend by socdciris like so:

ingest_lev0_irisdc vc=$vc_in indir=$DIRSOC2SOC outdir=$DIRSOC2PIPE
pipedir=$DIRPIPE2SOC logfile=$log2

It is run on the backend by doingestlev0_IRIS.pl like so:

ingest_lev0_irisdc vc=VC03 indir=/dds/soc2pipe/iris logfile=<log_file_name>

Note that an 'outdir=' must not be used in the bakend. This is how
ingest_lev0_irisdc knows to rm the tlm and qac files from the indir after
it has copied them to the /SUMs.


/home/prodtest/cvs/IRIS/proj/lev0/apps/ingest_lev0_irisdc.c is normally edited
on irisdc. It is then 'cvs commit' to the sunroom cvs/IRIS tree.
It is made on irisdc as user prodtest.

On n02, as user prodtest, do this:
n02:/home/prodtest/cvs/IRIS/proj/lev0/apps> cvs update ingest_lev0_irisdc.c
> cd /home/prodtest/cvs/IRIS
> make ingest_lev0_irisdc
(Then tell Art that the cvs/Development tree must be update.
Basically we want to get the new executable in place, something like this):
> cp _linux_x86_64/proj/lev0/apps/ingest_lev0_irisdc
/home/jsoc/cvs/Development/JSOC/bin/linux_x86_64/

Run on cl1n001 as user jsocprod (actually this will eventually be done
by doingestlev0_IRIS.pl):

cl1n001:/home/jsocprod> ingest_lev0_irisdc vc=VC03 indir=/dds/soc2pipe/iris
logfile=/tmp/iris.log1


