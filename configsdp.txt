# This file contains JSOC_SDP-specific configuration information. It is used only if the '-sdp' flag is used 
# as an argument to the check-out script (checkoutDRMS.pl). 

# The lines in the __MAKE__ section define JSOC_SDP-specific make variables, targets, and rules. When 
# configproj.pl is run, it will process this section and create JSOC/localization/make_basic.mk. These are
# available to all JSOC_SDP projects.

# The lines in the __PROJ__ section define JSOC_SDP projects. When configproj.pl runs, file content will be 
# added to JSOC/localization/Rules.mk and JSOC/localization/target.mk.

# The lines in the __LIBS__ section define default JSOC_SDP-specific third-party library configuration information.
# These values apply to all code in both JSOC/base and JSOC/proj directories. Entries in config.local will override 
# these values. This section is read by moreconfigure.pl only - configproj.pl does not look at this section.

__MAKE__
$(CEXESUMS):                    $(LIBSUMSAPI) $(LIBSUM) $(LIBDSTRUCT)
$(MODEXESUMS):                  $(LIBSUMSAPI) $(LIBSUM)

$(MODEXEDROBJ):                 CF_TGT := $(CF_TGT) -I$(SRCDIR)/proj/libs/dr
$(MODEXEDR) $(MODEXEDR_SOCK):   $(LIBDR)
__END__
__PROJ__
<?xml version='1.0'?>
<projects>
   <proj>
        <name>libs</name>
        <subdirs>
             <subdir>astro</subdir>
             <subdir>dr</subdir>
             <subdir>dsputil</subdir>
             <subdir>gapfiller</subdir>
             <subdir>interpolate</subdir>
             <subdir>stats</subdir>
             <subdir>egsehmicomp</subdir>
             <subdir>imrotate</subdir>
       </subdirs>
   </proj>
   <proj>
        <name>datacapture</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>dsdsmigr</name>
        <subdirs>
             <subdir>libs</subdir>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>maps_avgs</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
        <filters>
             <filter>
                  <name>COMPILER</name>
                  <value>icc</value>
             </filter>
        </filters>
   </proj>
   <proj>
        <name>util</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>lev0</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>lev1</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>jpe</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>lev1_aia</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>lev1_hmi</name>
        <subdirs>
             <subdir>apps</subdir>     
        </subdirs>
   </proj>
   <proj>
        <name>export</name>
        <subdirs>
             <subdir>libs/util</subdir>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>globalhs</name>
        <subdirs>
            <subdir>apps/src</subdir>
        </subdirs>
        <filters>
             <filter>
                  <name>COMPILER</name>
                  <value>icc</value>
             </filter>
       </filters>
   </proj>
   <proj>
        <name>lev1.5_hmi</name>
        <subdirs>
             <subdir>libs/lev15</subdir>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>lev1.5_aia</name>
        <subdirs>
            <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>flatfield</name>
        <subdirs>
            <subdir>libs/flatfieldlib</subdir>
            <subdir>apps</subdir>
            <subdir>off_flat_IDL</subdir>
        </subdirs>
   </proj>
  <proj>
        <name>rings</name>
        <subdirs>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
  <proj>
        <name>sharp</name>
        <subdirs>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
  <proj>
        <name>farside</name>
        <subdirs>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
  <proj>
        <name>timed</name>
        <subdirs>
             <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>mag</name>
        <subdirs>
             <subdir>apps</subdir>
             <subdir>pfss/apps</subdir>
             <subdir>ambig/apps</subdir>
             <subdir>harp/apps</subdir>
             <subdir>harp/libs/matlab/mex/src/util</subdir>
             <subdir>harp/libs/matlab/mex/src/mex2c</subdir>
             <subdir>harp/libs/matlab/mfile-mex/standalone</subdir>
             <subdir>harp/libs/matlab/mfile-mex/assignment</subdir>
             <subdir>harp/libs/matlab/mfile-mex/fits</subdir>
             <subdir>harp/libs/matlab/mfile-mex/hmi-mask-patch</subdir>
             <subdir>ident/apps</subdir>
             <subdir>ident/libs/mex2c</subdir>
             <subdir>ident/libs/mexfunctions</subdir>
             <subdir>ident/libs/util</subdir>
             <subdir>patch/apps</subdir>
             <subdir>nlfff/apps</subdir>
             <subdir>d4vm/apps</subdir>
             <subdir>remapmags/apps</subdir>
             <subdir>synop/apps</subdir>
        </subdirs>
        <filters>
             <filter>
                  <name>COMPILER</name>
                  <value>icc</value>
             </filter>
       </filters>
   </proj>
   <proj>
        <name>limbfit</name>
        <subdirs>
            <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>vfisv</name>
        <subdirs>
            <subdir>apps</subdir>
        </subdirs>
   </proj>
   <proj>
        <name>workflow</name>
        <subdirs>
            <subdir>apps</subdir>
        </subdirs>
   </proj>
</projects>
__END__
__PROJCFG__
#! /bin/csh -f

# Project-specific configuration (like adding links to scripts to the $JSOCROOT/scripts
# directory).

find ../proj/lev0/scripts -mindepth 1 \( -path \*CVS -prune -o -exec ln -s {} . \; -a -exec echo "  " {} " OK" \; \) -o -exec echo "  " {} " ERROR - couldn't create link" \;
__END__
__LIBS__
# JSOC_SDP third-party libraries used by base
    POSTGRES_LIB = pq
    CFITSIO_LIB = cfitsio

    ifeq ($(JSOC_MACHINE), linux_avx)
      POSTGRES_INCS = /usr/include
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/avx/include
      CFITSIO_LIBS = /home/jsoc/avx/lib
    endif

    ifeq ($(JSOC_MACHINE), linux_x86_64)
      POSTGRES_INCS = /usr/include
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-x86_64
    endif

    ifeq ($(JSOC_MACHINE), linux_ia32)
      POSTGRES_INCS = /usr/include
      POSTGRES_LIBS = /usr/lib
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-ia32
    endif

    ifeq ($(JSOC_MACHINE), linux_ia64)
      POSTGRES_INCS = /usr/include/pgsql
      POSTGRES_LIBS = /usr/lib
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-ia64
    endif

# JSOC_SDP third-party libraries used by the project directories

    ifeq ($(JSOC_MACHINE), linux_ia32)
      FFTW_INCS = /home/jsoc/include
      FFTW_LIBS = /home/jsoc/lib/linux-ia32
      GSL_INCS = /home/jsoc/include
      GSL_LIBS = /home/jsoc/lib/linux-ia32
    endif

    ifeq ($(JSOC_MACHINE), linux_x86_64)
      FFTW_INCS = /home/jsoc/include
      FFTW_LIBS = /home/jsoc/lib/linux-x86_64
      GSL_INCS = /home/jsoc/include
      GSL_LIBS = /home/jsoc/lib/linux-x86_64
      MPI_INCS = /home/jsoc/mpich2/include
      MPI_LIBS = /home/jsoc/mpich2/lib
      MPI_PATH = /home/jsoc/mpich2/bin
    endif

    ifeq ($(JSOC_MACHINE), linux_avx)
      FFTW_INCS = /home/jsoc/avx/include
      FFTW_LIBS = /home/jsoc/avx/lib
      GSL_INCS = /home/jsoc/avx/include
      GSL_LIBS = /home/jsoc/avx/lib
      MPI_INCS = /home/jsoc/avx/include
      MPI_LIBS = /home/jsoc/avx/lib
      MPI_PATH = /home/jsoc/avx/bin
    endif

# Try to specialize for non-default machines
    ifeq ($(MACHTYPE), j1)
      POSTGRES_INCS = /usr/include/pgsql
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-x86_64
    endif

    ifeq ($(MACHTYPE), d02)
      POSTGRES_INCS = /usr/include/pgsql
      POSTGRES_LIBS = /usr/lib
      CFITSIO_INCS = __CFITSIO_NOT_INSTALLED__
      CFITSIO_LIBS = __CFITSIO_NOT_INSTALLED__
   endif

    ifeq ($(MACHTYPE), dbserver)
      POSTGRES_INCS = /usr/local/pgsql/include
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-x86_64
    endif

    ifeq ($(MACHTYPE), cluster)
      POSTGRES_INCS = __POSTGRES_DEVELOP_NOT_INSTALLED__
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-x86_64
    endif

    ifeq ($(MACHTYPE), dcs)
      POSTGRES_INCS = /usr/include/pgsql
      POSTGRES_LIBS = /usr/lib64
      CFITSIO_INCS = /home/jsoc/include
      CFITSIO_LIBS = /home/jsoc/lib/linux-x86_64
    endif
# Set custom make file to tell the make system that the gcc cfitsio library is called
# libcfitsio_gcc.a
    ifeq ($(COMPILER), gcc)
      ifeq ($(JSOC_MACHINE), linux_x86_64)
        CFITSIO_LIB = cfitsio_gcc
      endif
    endif
__END__
