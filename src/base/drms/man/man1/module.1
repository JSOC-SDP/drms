.\"
.TH module 1  11-Sep-2006  "DRMS MANPAGE" "DRMS Programmer's Manual"
.SH NAME
module \- command line run information for all DRMS modules
.SH SYNOPSIS
.nf
.B any_module
\fI[-HLQV...] [[argument= value ...] [--argument value ...] [value ...]]\fR
.SH DESCRIPTION
Execute a \fImodule\fR from the command line. When a module is executed
from the command line, all argument values listed in the module are supplied
from: values on the command line; values in named parameter files, if any;
or default values specified in the module, if any.  In addition,
arguments or values supplied on the command line or in parameter files
and not specified in the module are also made available to the module,
either as named parameter-value pairs or as successive values of \fI$n\fR.
If any arguments specified in the module cannot be otherwise evaluated,
or correctly interpreted according to their declared type,
an appropriate error message is generated, and execution abandoned.

If the parameters for an existing DRMS server are specified, the main
program will attempt to connect to that server as a client; otherwise
a new DRMS server will be started. Once the connection to a server is made,
the module is executed, and its diagnostic output is routed to the
appropriate channels. On completion, any newly created DRMS server is
closed.

Type checking of arguments declared by the module is, at present, very
limited. Only for arguments declared to be of type ARG_NUME (enumerated)
are the values checked against the permissible range of values, and then
replaced with a numerical value (actually its string reperesentation)
corresponding to the order in the range list of the (first) match.
Range checking for numeric type arguments may be introduced in future.
In specifying values to  be assigned to named parameters, white space
between the '=' sign and the argument value is optional.

Certain flags and arguments are reserved, as they are intercepted by the
jsoc_main driver:
.PP
.B -H \fR(or \fB--help\fR)
print a help message listing the module's declared arguments, and exit.
.br
.B -L
do not log the module diagnostic output (stdout, stderr) to the DRMS.
.br
.B -Q
run in quiet mode; do not send diagnostic output to terminal (it will still be
logged). It has no effect if loging is turned off.
.br
.B -V
run the main driver in verbose mode: this will echo information about the
parmeters available to the module, the DRMS session started and the
redirection of diagnostic output for logging
.br
.B DRMS_QUERY_MEM
maximum amount of memory (in MB) used by a single record query.
(Note that this applies to the DRMS record information, not the segment size.)
Default value is 512

The following parameters are required if and only if the module is to
connect to an existing DRMS server:

.B DRMSSESSION
the DRMS session id formed by combining the drms_server host name with a
port number. No default.

The following parameters apply only if the module is to run with a new
private DRMS server (none are required):

.B DRMS_LOG_RETENTION
the online storage retention time (in days) of any data segments created
by the module. Default value is -1, implying use of the default retention
times for the applicable data series.
.br
.B DRMS_SERVER_WAIT
if non-zero, specifies that the DRMS server should wait for two seconds
before exiting.
Default value is 0.
.br
.B JSOC_DBHOST
the host name of the database server; default: \fIhmidb.stanford.edu\fR
.br
.B JSOC_DBNAME
the database name to connect to; default: \fIjsoc\fR
.br
.B JSOC_DBUSER
the user name for connecting to the database server; default: user name
of whoever is running the module
.br
.B JSOC_DBPASSWD
the database password for connecting to the database server as JSOC_DBUSER;
default is \fINULL\fR, which will use the ~/.pgpass file.
.br
.B sessionns
the session name space in which to run the DRMS server; default is based
on the user name, as specified in the jsoc admin table
.SH EXAMPLES
The minimal structure required for a module is the following:

#include <jsoc_main.h>
.br
char *module_name = "somename";
.br
ModuleArgs_t module_args[] = {
.br
  /*  argument declarations, if any, here  */
.br
};
.br
int DoIt () {
.br
  /*  program body here */
.br
}
.SH "SEE ALSO"
drms_server(1); cmdparams_parse(3)
