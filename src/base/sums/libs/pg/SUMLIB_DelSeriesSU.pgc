/* SUMLIB_DelSeriesSU.pgc
*/
/* This is to update the sum_partn_alloc to status/substatus of
 * DADP/DADPDELSU. This is call from delseriesdo_1() in sum_svc_proc.c.
 * The delete_series program will make this call so that the sum_rm
 * program will NOT try to rm records in the Records.txt file in a SU dir
 * if the series has been deleted and the record # could potentially be
 * reused.
 * Called with the list of sunum (i.e. ds_index) associated with the
 * deleted series.
 * Typical keylist is:
 * DEBUGFLG:       KEYTYP_INT      1
 * USER:           KEYTYP_STRING   production
 * sunum_0:    KEYTYP_UINT64    574
 * sunum_1:    KEYTYP_UINT64    575
 * etc. with last one value = 0
 */
#include <SUM.h>
#include <sum_rpc.h>
#include <printk.h>

int SUMLIB_DelSeriesSU(KEY *params);

int SUMLIB_DelSeriesSU(KEY *params)
{
  EXEC SQL TYPE uint64_t IS unsigned long long;

EXEC SQL BEGIN DECLARE SECTION;
  uint64_t        l_ds_index;
EXEC SQL END DECLARE SECTION;
  uint64_t index;
  char name[128];
  int i;
  int status = 0;

    EXEC SQL WHENEVER SQLERROR GOTO sqlerror;
    EXEC SQL WHENEVER NOT FOUND GOTO sqlerror;
  printk("In SUMLIB_DelSeriesSU():\n");
  for(i = 0; ; i++) {
    sprintf(name, "sunum_%d", i);
    index = getkey_uint64(params, name);
    printk("%s = %ld\n", name, index); /* !!!TEMP */
    if(index == 0) break;
    l_ds_index = index;

	EXEC SQL UPDATE SUM_PARTN_ALLOC
		SET STATUS = 2,
		ARCHIVE_SUBSTATUS = 1024
		WHERE ds_index = :l_ds_index;
    continue;
sqlerror:
	status = 1;
	printk("Error in SUMLIB_DelSeriesSU\n"); 
	printk("% .70s \n", sqlca.sqlerrm.sqlerrmc); 
    continue;
  }

        EXEC SQL COMMIT WORK;
  return(status);
}


