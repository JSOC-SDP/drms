__DEFS__

# NetDRMS local site configuration info
# edit the values in the second column of each line in this file to reflect
#   the values appropriate to your site

# a marker to indicate whether this file has been checked/edited. You MUST
# either change its value to yes (or anything but NO) or comment it out.
LOCAL_CONFIG_SET	NO

# the next three entries must almost certainly be changed to reflect your
#   local configuration

# the name of the NetDRMS database; the SUMS database will be assumed to
#   have the same name with "_sums" appended
DRMS_DATABASE	mydb

# the host name of the default database server you will be accessing; you
#   should include the internet domain (e.g. host.subnet.net) if the server is
#   not on your subnet; but if it is on your subnet it may be better not to
# the default value is only really appropriate if you are running in a
#   single-user environment, such as a laptop; whether it is the default
#   or a named host depends on how the postgres database named above and
#   its dependent _sums have been configured in their pg_hba.conf files:
#   localhost for METHOD "trust", a named host for METHOD "ident sameuser"
DBSERVER_HOST	localhost

# the port number for the DRMS database server - default should be okay
#   unless in use otherwise
DRMS_DBPORT	5432

# a 15-bit numerical site identifier; values < 16384 (0x4000) are for
#   publicly exporting sites, and must be registered to assure uniqueness
# the default value is for a private unregistered site, and may not provide
#   access to publicly exporting sites
DRMS_SITE_CODE	0x4000

# the default values for the following five entries may or may not be
#   appropriate for your site configuration, depending on how and where
#   third-party software has been set up and installed

# the user name of the postgres administrative account; normally "postgres"
#   if you have followed the PostgreSQL installation suggestions
POSTGRES_ADMIN	postgres

# a sample namespace appropriate to your site; this is only used for a
#   couple of database initialization scripts and is not important for
#   subsequent installations/updates
DRMS_SAMPLE_NAMESPACE	drms

# The remaining definitions only need to be reviewed and modified as
#   appropriate if you will be doing a "make sums" as or in behalf of the
#   SUMS_MANAGER; they do not affect the functioning of the libraries and
#   applications  built by a regular user with plain "make"; nevertheless
#   it is probably a good idea to keep them consistent for the site

# The following entries are for slony processing of mirrored data archives;
#   they are not currently used in the "make"

# the postgres user name of the slony administrative account; normally "slony"
SLONY_ADMIN	slony

# the base directory for slony logs
SLONY_LOG_BASEDIR	/usr/local/logs/slony

# the user name(s) or email addresses for slony problem notifications
SLONY_NOTIFY	production

# The following entries are specific to the SUMS configuration

# the user name of the SUMS administrator account - a special account is
#   recommended for multi-user systems, but not required
SUMS_MANAGER	production

# the group name for users permitted to add data to DRMS/SUMS; not
#   currently used in code, but should match the group ownership of
#   the SUMS root directories /SUM*
SUMS_GROUP	drms

# the host name of the default SUMS server you will be using; this is the
#   the machine that the SUMS storage units are mounted on, not necessarily
#   the machine serving the Postgres SUMS database
SUMS_SERVER_HOST	localhost

# the port number for the DRMS database server - default should be okay
#   unless in use otherwise
SUMS_DBPORT	5434

# the number of sum_svc processes, per sum service (e.g., SUM_get, SUM_alloc) to start, 
# by default, when multi-SUMS starts up.
SUM_NUMSUM    3

# the maximum number of sum_svc processes, per sums service.
SUM_MAXNUMSUM 8

# the base directory for SUMS logs and configuration files; used by
#   base/sums/apps/sum_svc.c and sum_rm.c
SUMS_LOG_BASEDIR	/usr/local/logs/SUM

# the directory in which the binary of sum_chmown, a root setuid program,
#   is installed; must be mounted locally on the machine on which the
#   SUMS partition are mounted; used by base/sums/apps/sum_svc_proc.c
SUMS_BIN_BASEDIR	/usr/local/bin

# whether a tape archive service is available for SUMS or not; set to a
#   non-zero value if it is
SUMS_TAPE_AVAILABLE	0

# whether or not there exist multiple SUMS partition sets
SUMS_MULTIPLE_PARTNSETS      0

# If AUTOSELCOMP is 1, then the configure script will automatically select
# the 'best' compiler for use with the make system (choosing icc over gcc).
# Set this to 0 to permit manual selection via the JSOC_COMPILER and JSOC_FCOMPILER
# environment variables, or via editing of make_basic.mk
AUTOSELCOMP (1)

SUMS_DEBUG 0

# SUMS Export - specify how to construct 4 arguments that represent the
#   transfer program (e.g. scp), the user, the host, and the port to be used
#   in a command line for fetching SUMS data from a server via sum_export_svc.
#   Use a printf format string, followed by any combination of the following
#   string variables: meth, user, host, domain, port. These string variables
#   are populated from the SUMS_URL value in jsoc.drms_sites, which has the
#   form:
#
#   <meth>://<user>@<host>.<domain>:<port>
#
# The meth variable is assigned the string <meth>, the user variable is
#   assigned the string <user>, and so on.
#
# The 4 arguments will be used as follows to construct a command line:
#     METH -P PORT USER@HOST:file destfile (if PORT is not 0)
#     METH USER@HOST:file destfile (if PORT is 0)
#
# N.B. The default values, as provided in the commented-out definitions below,
#   will result in a command of the form:
#     METH -P PORT USER@HOST.DOMAIN:file destfile (if PORT is not 0)
#     METH USER@HOST.DOMAIN:file destfile (if PORT is 0)
#   It is only necessary to uncomment the definitions if you need to provide
#   a different command, for example,
#     METH USER@HOST-PORT:file destfile
#   in which case you would have to define:
#     SUMEXP_HOSTFMT    "%s-%s", host, port
#   and
#     SUMEXP_PORTFMT    "0"

# METH argument - The transfer program name (eg., scp-hpn)
#SUMEXP_METHFMT  "%s", meth

# USER argument - The user account name on the HOST containing the source file
#SUMEXP_USERFMT  "%s", user

# HOST argument - The host machine containing the source file
#SUMEXP_HOSTFMT  "%s.%s", host, domain

# PORT argument - The port on the host machine to connect to
#SUMEXP_PORTFMT  "%s", port

###############################
# TABLE OF PRODUCTION USERS
#   These parameters are used by lib DRMS to identify a database table (not a data series)
#   that lists the database users that are 'production users'. These users have privileges
#   that ordinary users do not. For example, production users can reduce the retention of
#   data series that the production user does not own.

# The host:port of the machine serving as the db server that contains the production-user table.
#PRODUSER_DBHOST    hmidb:5432

# The name of database on the database host that contains the production-user table.
#PRODUSER_DBNAME    jsoc

# The name of the production-user table
#PRODUSER_PRODTAB   su_production.produsers

# The name of the column that contains the list of production users in the production-user table.
#PRODUSER_COLUSER   username
#
# END TABLE OF PRODUCTION USERS
###############################

__MAKE__

# Third-party libraries required in order to make NetDRMS binaries. Specify
# a default and also machine-specific locations (if desired). The default will
# be used if no machine-specific entry exists.

# *** PostgreSQL ***

#   defaults
#     PostgreSQL API headers (must contain libpq-fe.h)
POSTGRES_INCS:X86_64	/usr/include
POSTGRES_INCS:IA32	/usr/include
POSTGRES_INCS:AVX	/usr/include

#     the location of the PostgreSQL libs; likely to be either
#     /usr/lib or /usr/lib64 or /usr/local/pgsql/lib
POSTGRES_LIBS:X86_64	/usr/lib64
POSTGRES_LIBS:IA32	/usr/lib
POSTGRES_LIBS:AVX	/usr/lib64

#     actual library names
POSTGRES_LIB            pq

#   machine-specific
#     The following is an example:
#     POSTGRES_LIBS:N02     /usr/lib64

# *** end PostgreSQL ***

# *** CFITSIO ***

#   defaults
#     CFITSIO API headers (must contain fitsio.h)
CFITSIO_INCS:X86_64	/home/jsoc/include
CFITSIO_INCS:IA32	/home/jsoc/include
CFITSIO_INCS:AVX	/home/jsoc/include

#     the location of the cfitsio libraries
CFITSIO_LIBS:X86_64	/home/jsoc/lib/linux-x86_64
CFITSIO_LIBS:IA32	/home/jsoc/lib/linux-ia32
CFITSIO_LIBS:AVX	/home/jsoc/lib/linux_avx

#     actual library names
CFITSIO_LIB             cfitsio

#   machine-specific
#     The following is an example:
#     CFITSIO_LIBS:N02	/usr/lib64

# *** end CFITSIO ***

# NetDRMS users can request subdirectories from the Stanford proj directories 
# (e.g., JSOC/proj/util). These users will need to contact Stanford and obtain
# the source subdirectories desired. They will then place these subdirectories
# in the JSOC/proj directory of their NetDRMS release. To properly build 
# targets in these subdirectories, using the JSOC make system, the user needs
# to add entries to this configuration file - one entry for each subdirectory
# that contains source code to be compiled. Each entry is a space-separated pair
# of strings: the string "PROJDIR" followed by a subdirectory (of the proj 
# directory).  For example:
#
# PROJDIR     util/apps
# PROJDIR     util/libs
# 
# NOTE: It is not sufficient to list only a parent directory, like util. Source code
# in child directories will not automatically be compiled.
