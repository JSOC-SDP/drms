# Standard things
sp 		:= $(sp).x
dirstack_$(sp)	:= $(d)
d		:= $(dir)

# Local variables
LIBNAME		:= libsoi.so
LIBSOIJSOC	:= $(d)/$(LIBNAME)
FPICOBJ_$(d)	:= $(addprefix $(d)/, vds_open.o vds_new.o vds_select.o vds_attrs.o vds_set.o vds_create.o vds_vars.o vds_query.o vds_getkey.o at_setkey.o at.o sds_set.o sds_query.o sds_attr.o sds_key.o sds_malloc.o sds_llist.o sds_utility.o sds_convert.o sds_helper.o sds_stats_inf.o sds_fits.o sds_flip.o sds_slice.o sds_axis.o ids_sdslist.o ids_series.o ids_etc.o ids_clist.o NaNs.o key.o names.o atoinc.o str_utils.o timerep.o errstk.o globals.o)
FPICOBJ		:= $(FPICOBJ) $(FPICOBJ_$(d))
DEP_$(d)	:= $(FPICOBJ_$(d):%=%.d)

CLEAN		:= $(CLEAN) $(FPICOBJ_$(d)) $(LIBSOIJSOC) $(DEP_$(d))

S_$(d)		:= $(notdir $(LIBSOIJSOC))

WLOPTION	:= -soname,$(LIBNAME)

CF_$(d)		:= -I/home/soi/CM/include

# Since this is a library that has already been released for SOI/MDI, we are not going to track
# down warnings in JSOC.  Should the source files change in SOI/MDI, those changes will be
# reflected automatically in JSOC.  All changes will be made in SOI/MDI only.
ifeq ($(COMPILER), icc)
CF_$(d)		:= $(CF_$(d)) -w
endif

# Local rules
$(FPICOBJ_$(d)):	CF_TGT := $(CF_$(d))
$(FPICOBJ_$(d)):	$(SRCDIR)/$(d)/Rules.mk

$(LIBSOIJSOC):		LF_TGT := -shared -Wl,$(WLOPTION)
$(LIBSOIJSOC):		$(FPICOBJ_$(d))
			$(LINK)
			$(SLLIB)

# Shortcuts
.PHONY:	$(S_$(d))
$(S_$(d)):	%:	$(d)/%

# Standard things
-include	$(DEP_$(d))

d		:= $(dirstack_$(sp))
sp		:= $(basename $(sp))
