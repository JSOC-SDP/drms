#!/usr/bin/perl
#
#NOTE: DON'T CALL THIS BY HAND.
#/home/production/cvs/JSOC/base/sums/scripts/sum_start_j1_auto.MULTI
#This is to start the sum_svc and related servers.
#Only called by sumck_j1M.
#Call with -M will not send mail notification.
#
$| = 1;                 #flush output as we go
$ENV{'SUMSERVER'} = "j1";      #make sure we stay in this machine
$DB = "jsoc_sums";	#the "real" db that production uses for sums
#$DB = "jim";	#the "real" db that production uses for sums
$DBDRMS = "jsoc_sums";	#the db use for drms (used by sum_pe_svc)
$GREPPS = "388";	#grep for this in ps -ef
#$GREPPS = "jim";
$HOST = "j1"; 		#where sum_svc runs

$user = $ENV{'USER'};
if($user ne "production") {
  print "You must be user production to run\n";
  exit;
}
$host = `hostname`;
chomp($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}
$mailflg = 1;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-M(.*)/) {
    $mailflg = 0;
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}

$PID = getppid;
$MLOGFILE = "/tmp/sum_start_mail_j1_auto_multi.$PID";
$LOGFILE = "/tmp/sum_start_j1_auto_multi.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
$dtag = (1900 + $year).".".$mon2.".$mday2".".$hour2"."$min2"."$sec2"; #log name
$sumlog = "sum_svc_$dtag.log";

print "sum_start_j1_auto.MULTI at $date\n\n";
print LOG "sum_start_j1_auto.MULTI at $date\n\n";
print MLOG "sum_start_j1_auto.MULTI at $date\n";
print MLOG "See $LOGFILE for more details\n";

@ps_prod = `ps -ef | grep $GREPPS`;
#print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";
        if($mailflg) {
          $cmd = "sum_stop_j1_auto.MULTI";
        }
        else {
          $cmd = "sum_stop_j1_auto.MULTI -M";
        }
        if(system($cmd)) {
          print "Error: failure on sum_stop_j1_auto.MULTI\n";
          exit;
        }

        print "** Now starting: sum_svc $DB\n";
        print LOG "** Now starting: sum_svc $DB\n";
        $cmd = "sum_pe_svc $DBDRMS &"; 
        if(system($cmd)) {
          print "Error: failure on sum_pe_svc $DBDRMS\n";
        }
        $cmd = "sum_svc $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on sum_svc $DB\n";
        }
        sleep(2);			#let sum_svc start
        $cmd = "Sdelser $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sdelser $DB\n";
        }
        $cmd = "Sinfo $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sinfo $DB\n";
        }
        $cmd = "Sinfo1 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sinfo1 $DB\n";
        }
        $cmd = "Sinfo2 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sinfo2 $DB\n";
        }
        $cmd = "Sput $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sput $DB\n";
        }
        $cmd = "Sput1 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sput1 $DB\n";
        }
        $cmd = "Sput2 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sput2 $DB\n";
        }
        $cmd = "Sget $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sget $DB\n";
        }
        $cmd = "Sget1 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sget1 $DB\n";
        }
        $cmd = "Sget2 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sget2 $DB\n";
        }
        $cmd = "Salloc $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Salloc $DB\n";
        }
        $cmd = "Salloc1 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Salloc1 $DB\n";
        }
        $cmd = "Salloc2 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Salloc2 $DB\n";
        }
        $cmd = "Sopen $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sopen $DB\n";
        }
        $cmd = "Sopen1 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sopen1 $DB\n";
        }
        $cmd = "Sopen2 $DB $sumlog &";
        if(system($cmd)) {
          print "Error: failure on Sopen2 $DB\n";
        }
        $cmd = "ssh d02.stanford.edu sum_forker $DB $date&";
        if(system($cmd)) {
          print "Error: failure on $cmd\n";
        }

        print "SUM multi j1 auto Start Complete\n";
        print LOG "SUM multi j1 auto Start Complete\n";
        close(LOG);
        close(MLOG);
        $mail = "Mail -s \"SUM multi j1 auto Start Complete\"";
        #$to = "sssc_crew\@solar2";
        $to = "jim";
        $cmd = "$mail $to < $MLOGFILE";
        if($mailflg) { system $cmd; }
        exit;

