#!/usr/bin/perl

$| = 1;                 #flush output as we go

if (!defined ($ENV{'DRMS'})) {
  $BPATH = `which sum_svc`;
  if ($BPATH !~ /\S+/) {
    print "\nenvironment variable \$DRMS undefined and sum_svc not in path\n";
    exit;
  }
  $BPATH = `dirname $BPATH`;
  $BPATH = `dirname $BPATH`;
  $DRMS = `dirname $BPATH`;
  chomp ($DRMS);
  $LOCALINF = "$DRMS/config.local";
} else {
  $LOCALINF = "$ENV{'DRMS'}/config.local";
}
open (CMD, "<$LOCALINF");
while (defined ($line = <CMD>)) {
  chomp ($line);
  if ($line =~ /^DRMS_DATABASE\s+(.+)/) {
    $DBDRMS = $1;
    $DB = "$DBDRMS\_sums"
  }
  if ($line =~ /^SUMS_SERVER_HOST\s+(.+)/) {
    $HOST = $1;
    $HOST = lc ($HOST);
  }
  if ($line =~ /^SUMS_MANAGER\s+(.+)/) {
    $SUMGR = $1;
  }
}
close (CMD);

$user = $ENV{'USER'};
if ($user ne $SUMGR) {
  print "You must be user $SUMGR to run\n";
  exit;
}
$GREPPS = `id -u`;
chomp ($GREPPS);
$host = `hostname`;
chomp ($host);
$host = lc ($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}

$forceflg = 0;
$sumck = 1;
$mailflg = 1;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-f(.*)/) {
    $forceflg = 1;
  } elsif (/^-X(.*)/) {
    $sumck = 0;
  } elsif (/^-M(.*)/) {
    $mailflg = 0;
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}

if ($forceflg == 0) {
  @adv = `sum_adv`;
  $state = shift (@adv);
  chomp ($state);
  if($state == 0) {
    print "sum_svc has active users. Please try again later.\n";
    print "All new SUM_open() have been forbidden\n";
    exit (0);
  }
}

$PID = getppid;
$LOGFILE = "/tmp/sum_stop.$PID";
$MLOGFILE = "/tmp/sum_stop_mail.$PID";

open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "\nsum_stop at $date\n\n";
print LOG "sum_stop at $date\n\n";
print MLOG "sum_stop at $date\n";
print MLOG "See $LOGFILE on $host for more details\n";

if ($sumck) {			#first kill any sum_ck
  @ps_prod = `ps -ef | grep $GREPPS`;
  while ($_ = shift(@ps_prod)) {
    if (/^$GREPPS/) {		#do for all production processes
      if (/sumck/) {
        ($a, $psid, $c) = split(/\s+/, $_);
        $process = "sum_ck";
        print "Killing $process with kill -9 $psid\n";
        print LOG "Killing $process with kill -9 $psid\n";
        `kill -9 $psid`; 
        last;
      }
    }
  }
}

@ps_prod = `ps -ef | grep $GREPPS`;
print "The ps -ef for $SUMGR is:\n@ps_prod\n";
print LOG "The ps -ef for $SUMGR is:\n@ps_prod\n";

while ($_ = shift(@ps_prod)) {
  if (/^$GREPPS/) {		# do for all production processes
    if (/sum_stop/) {		# don't kill ourselves
      next;
    }
    if (/sum_svc $DB/ || /sum_svc -o $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_svc";
    } elsif (/sum_rm $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_rm";
    } else {
      next;
    }
    print "Killing $process $DB with kill -9 $psid\n";
    print LOG "Killing $process $DB with kill -9 $psid\n";
    `kill -9 $psid`; #!!!TEMP noop
  }
}

print "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
print LOG "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
`/bin/rm -f /usr/local/logs/soc/NOTAPEARC`;

print "SUM Stop Complete\n";
print LOG "SUM Stop Complete\n";
close (LOG);
close (MLOG);

# $mail = "Mail -s \"SUM Stop_d02 Complete\"";
# $to = "drms_users";
# $cmd = "$mail $to < $MLOGFILE";
# if ($mailflg) { system $cmd; }

exit;
