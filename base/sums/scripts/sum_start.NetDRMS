#!/usr/bin/perl
#sum_start.NetDRMS
#This is to start the sum_svc and multiple related servers on a remote site.
#Call with -M will not send mail notification (N/A on NetDRMS).
#Call with -f to force a stop if needed (vestigial). 
#
$| = 1;                 #flush output as we go
$mailflg = 1;
$forceflg = 0;
$forcearg = "";
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-M(.*)/) {
    $mailflg = 0;
  }
  elsif(/^-f(.*)/) {
    $forceflg = 1;
    $forcearg = "-f";
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}
$wdpath = `which $0`;
chomp($wdpath);
$pos = rindex($wdpath, "/");
$wd = substr($wdpath, 0, $pos);
$ldir = "$wd/../include/localization.h";
$sdir = "$wd/../include/serverdefs.h";

if(-e $ldir) {
  $xdir = $ldir;
  $localization = 1;
}
else {
  $xdir = $sdir;
  $localization = 0;
}
@servdefs = `cat $xdir`;
@def = grep(/^#define SUM_NUMSUM/, @servdefs);
($a,$b,$numsum) = split(/\s+/, shift(@def));
if(!$numsum) {
  print "ERROR: Can't get SUM_NUMSUM from $xdir\n";
  exit(1);
}

print "Number of SUM process sets to spawn = $numsum\n";
@def = grep(/^#define SUM_MAXNUMSUM/, @servdefs);
($a,$b,$maxnumsum) = split(/\s+/, shift(@def));
print "Max number of SUM process can spawn = $maxnumsum\n";

if($numsum == 0 || $numsum > $maxnumsum) {
  print "**ERROR: in $xdir def for SUM_NUMSUM\n";
  print "Number must be between 1 and $maxnumsum\n";
  exit;
}

@def = grep(/^#define SUMSERVER/, @servdefs);
($a,$b,$sumserver) = split(/\s+/, shift(@def));
if(($pos = index($sumserver, '.')) != -1) {
  $sumserver = substr($sumserver, 0, $pos);
}
$sumserver = substr($sumserver, 1, -1); #get rid of quotes (")
$host = `hostname`;
chomp($host);
if(($pos = index($host, '.')) != -1) {
  $host = substr($host, 0, $pos);
}
if($host ne $sumserver) {
  print "This can only be run on $sumserver.\n";
  exit;
}

$ENV{'SUMSERVER'} = $sumserver;      #make sure we stay in this machine
print "SUMSERVER is $sumserver\n";
@def = grep(/^#define SUMS_MANAGER/, @servdefs);
($a,$b,$sumsmanager) = split(/\s+/, shift(@def));
$sumsmanager = substr($sumsmanager, 1, -1); #get rid of quotes (")
print "SUMS_MANAGER is $sumsmanager\n";
$user = $ENV{'USER'};
if($user ne $sumsmanager) {
  print "You must be user $sumsmanager to run\n";
  exit;
}
@def = grep(/^#define SUMS_MANAGER_UID/, @servdefs);
($a,$b,$sumsmanageruid) = split(/\s+/, shift(@def));
$sumsmanageruid = substr($sumsmanageruid, 1, -1); #get rid of quotes (")
print "SUMS_MANAGER_UID is $sumsmanageruid\n";
$GREPPS = $sumsmanageruid;

@def = grep(/^#define DBNAME/, @servdefs);
($a,$b,$dbname) = split(/\s+/, shift(@def));
$dbname = substr($dbname, 1, -1); #get rid of quotes (")
$DB = $dbname."_sums";
print "SUMS db is $DB\n";

$PID = getppid;
$LOGFILE = "/tmp/sum_start.NetDRMS.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
$dtag = (1900 + $year).".".$mon2.".$mday2".".$hour2"."$min2"."$sec2"; #for log name
$sumlog = "sum_svc_$dtag.log";
print "sum_start.NetDRMS at $date\n\n";
print LOG "sum_start.NetDRMS at $date\n\n";

@ps_prod = `ps -ef | grep $GREPPS`;
#print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";

#Find if any sums process is still running. Set $active=1 if so.
#Assumes max of 8 sum process sets can be running.
$active = 0;
$x = grep(/Sinfo $DB/, @ps_prod);
$y = grep(/Sinfo[1,2,3,4,5,6,7] $DB/, @ps_prod);
if($x || $y) {
  $process = "Sinfo";
  $active = 1;
  goto CKEND;
}
$x = grep(/xsum_svc $DB/, @ps_prod);
$y = grep(/xsum_svc -o $DB/, @ps_prod);
if($x || $y) {
  $process = "xsum_svc";
  $active = 1;
  goto CKEND;
}
$x = grep(/Sdelser $DB/, @ps_prod);
if($x) {
  $process = "Sdelser";
  $active = 1;
  goto CKEND;
}
$x = grep(/Sput $DB/, @ps_prod);
$y = grep(/Sput[1,2,3,4,5,6,7] $DB/, @ps_prod);
if($x || $y) {
  $process = "Sput";
  $active = 1;
  goto CKEND;
}
$x = grep(/Sget $DB/, @ps_prod);
$y = grep(/Sget[1,2,3,4,5,6,7] $DB/, @ps_prod);
if($x || $y) {
  $process = "Sget";
  $active = 1;
  goto CKEND;
}
$x = grep(/Salloc $DB/, @ps_prod);
$y = grep(/Salloc[1,2,3,4,5,6,7] $DB/, @ps_prod);
if($x || $y) {
  $process = "Salloc";
  $active = 1;
  goto CKEND;
}
$x = grep(/Sopen $DB/, @ps_prod);
$y = grep(/Sopen[1,2,3,4,5,6,7] $DB/, @ps_prod);
if($x || $y) {
  $process = "Sopen";
  $active = 1;
  goto CKEND;
}

CKEND:

  if($active) {
    print "** NOTE: A $process process is still running\n";
    print LOG "** NOTE: A $process process is still running\n";
    print "Do you want me to do a sum_stop.NetDRMS followed by a sum_start.NetDRMS (y or n):\n";
    while(<STDIN>) {
      chop($_);
      if(($_ eq "Y") || ($_ eq "y")) {
        last;
      }
      else {
        print "Aborting sum_start.NetDRMS\n";
        exit;
      }
    }
    if($mailflg) {
      $cmd = "sum_stop.NetDRMS $forcearg";
    }
    else {
      $cmd = "sum_stop.NetDRMS -M $forcearg";
    }
    if(system($cmd)) {
      print "Error: failure on sum_stop.NetDRMS\n";
      exit;
    }
  }

  #Now make an array for what to start for each $numsum
  if($numsum == 1) {
    @spawn = (sum_svc);
  }
  elsif ($numsum == 2) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sput, Sput1, Sget, Sget1, Salloc, Salloc1, Sopen, Sopen1);
  }
  elsif ($numsum == 3) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sput, Sput1, Sput2, Sget, Sget1, Sget2, Salloc, Salloc1, Salloc2, Sopen, Sopen1, Sopen2);
  }
  elsif ($numsum == 4) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sput, Sput1, Sput2, Sput3, Sget, Sget1, Sget2, Sget3, Salloc, Salloc1, Salloc2, Salloc3, Sopen, Sopen1, Sopen2, Sopen3);
  }
  elsif ($numsum == 5) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sinfo4, Sput, Sput1, Sput2, Sput3, Sput4, Sget, Sget1, Sget2, Sget3, Sget4, Salloc, Salloc1, Salloc2, Salloc3, Salloc4, Sopen, Sopen1, Sopen2, Sopen3, Sopen4);
  }
  elsif ($numsum == 6) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sinfo4, Sinfo5, Sput, Sput1, Sput2, Sput3, Sput4, Sput5, Sget, Sget1, Sget2, Sget3, Sget4, Sget5, Salloc, Salloc1, Salloc2, Salloc3, Salloc4, Salloc5, Sopen, Sopen1, Sopen2, Sopen3, Sopen4, Sopen5);
  }
  elsif ($numsum == 7) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sinfo4, Sinfo5, Sinfo6, Sput, Sput1, Sput2, Sput3, Sput4, Sput5, Sput6, Sget, Sget1, Sget2, Sget3, Sget4, Sget5, Sget6, Salloc, Salloc1, Salloc2, Salloc3, Salloc4, Salloc5, Salloc6, Sopen, Sopen1, Sopen2, Sopen3, Sopen4, Sopen5, Sopen6);
  }
  elsif ($numsum == 8) {
    @spawn = (sum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sinfo4, Sinfo5, Sinfo6, Sinfo7, Sput, Sput1, Sput2, Sput3, Sput4, Sput5, Sput6, Sput7, Sget, Sget1, Sget2, Sget3, Sget4, Sget5, Sget6, Sget7, Salloc, Salloc1, Salloc2, Salloc3, Salloc4, Salloc5, Salloc6, Salloc7, Sopen, Sopen1, Sopen2, Sopen3, Sopen4, Sopen5, Sopen6, Sopen7);
  }

  print "** Now starting: sum_svc $DB\n";
  print LOG "** Now starting: sum_svc $DB\n";
  while($p = shift(@spawn)) {
    $cmd = "$p $DB $sumlog &";
    print "$cmd\n";
    if(system($cmd)) {
      print "Error: failure to spawn $p\n";
      print "Abort sum_start.NetDRMS\n";
      exit;
    }
  }

#For tape_svc only
#        $cmd = "ssh d02.stanford.edu sum_forker  $DB $date&";
#        if(system($cmd)) {
#          print "Error: failure on $cmd\n";
#        }

        #$cmd = "/home/production/cvs/JSOC/base/sums/scripts/sumck_ximM &";
        $cmd = "sumck_M &";
        if(system($cmd)) {
          print "Error: failure on sumck_M\n";
        }
        print "SUM NetDRMS Start Complete\n";
        print LOG "SUM NetDRMS Start Complete\n";
        close(LOG);
#        $mail = "mail -s \"SUM xim MULTI Start Complete\"";
#        #$to = "jsoc_users";
#        $to = "jim\@sun.stanford.edu";
#        $cmd = "$mail $to < $MLOGFILE";
#        if($mailflg) { system $cmd; }
        exit;

