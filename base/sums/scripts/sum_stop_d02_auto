eval 'exec /home/jsoc/bin/$JSOC_MACHINE/perl -S  $0 "$@"'
    if 0;
#
#NOTE: DONT CALL THIS BY HAND. It is an auto script called
#by sumck
#
#/home/production/cvs/JSOC/base/sums/scripts/sum_stop_d02_auto
#This is to stop the sum_svc and related servers on d02 for DB jsoc_sums.
#It is only called by sumck (via sum_start_d02_auto) 
#when it sees that sum_svc is
#not running and we will now stop and restart all the SUMS processes.
#
$| = 1;                 #flush output as we go
$ENV{'SUMSERVER'} = "d02";	#make sure we stay in this machine
$DB = "jsoc_sums";	#the "real" db that production uses for sums
$DBDRMS = "jsoc_sums";	#the db sum_pe_rpc uses for drms
$GREPPS = "388";
#$GREPPS = "jim";
$HOST = "d02.Stanford.EDU"; #where sum_svc runs

$user = $ENV{'USER'};
if($user ne "production") {
  print "You must be user production to run\n";
  exit;
}
$host = `hostname`;
chomp($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}
$mailflg = 1;
$forceflg = 0;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-M(.*)/) {
    $mailflg = 0;
  }
  elsif (/^-f(.*)/) {
    $forceflg = 1;
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}

#if($forceflg == 0) {
#  @adv = `sum_adv`;
#  $state = shift(@adv);
#  chomp($state);
#  if($state == 0) {
#    print "sum_svc has active users. Please try again later.\n";
#    print "All new SUM_open() have been forbidden\n";
#    print "Call with -f to force a stop\n";
#    exit(0);
#  }
#}

$PID = getppid;
$LOGFILE = "/tmp/sum_stop_d02_auto.$PID";
$MLOGFILE = "/tmp/sum_stop_mail_d02_auto.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "\nsum_stop_d02_auto at $date\n\n";
print LOG "sum_stop_d02_auto at $date\n\n";
print MLOG "sum_stop_d02_auto at $date\n";
print MLOG "See $LOGFILE on $host for more details\n";

@ps_prod = `ps -ef | grep $GREPPS`;
print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";
while($_ = shift(@ps_prod)) {
  if(/^$GREPPS/) {		#do for all production processes
    if(/sum_stop_d02_auto/) {	#don't kill ourselves
      next;
    }
    if(/sum_svc $DB/ || /sum_svc -o $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_svc";
    }
    elsif(/tape_svc $DB/ || /tape_svc -o $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "tape_svc";
    }
    elsif(/drive0_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive0_svc";
    }
    elsif(/drive1_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive1_svc";
    }
    elsif(/drive2_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive2_svc";
    }
    elsif(/drive3_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive3_svc";
    }
    elsif(/drive4_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive4_svc";
    }
    elsif(/drive5_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive5_svc";
    }
    elsif(/drive6_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive6_svc";
    }
    elsif(/drive7_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive7_svc";
    }
    elsif(/drive8_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive8_svc";
    }
    elsif(/drive9_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive9_svc";
    }
    elsif(/drive10_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive10_svc";
    }
    elsif(/drive11_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive11_svc";
    }
    elsif(/robot0_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "robot0_svc";
    }
    elsif(/sum_rm $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_rm";
    }
    elsif(/sum_pe_svc $DBDRMS/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_pe_svc";
    }
    else {
      next;
    }
    print "Killing $process with kill -9 $psid\n";
    print LOG "Killing $process with kill -9 $psid\n";
    `kill -9 $psid`;
  }
}
#print "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#print LOG "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#`/bin/rm -f /usr/local/logs/soc/NOTAPEARC`;

print "SUM Stop_d02_auto Complete\n";
print LOG "SUM Stop_d02_auto Complete\n";
close(LOG);
close(MLOG);
$mail = "Mail -s \"SUM Stop_d02_auto Complete\"";
#$to = "sssc_crew\@solar2";
$to = "jim";
$cmd = "$mail $to < $MLOGFILE";
if($mailflg) { system $cmd; }
