eval 'exec /home/jsoc/bin/$JSOC_MACHINE/perl -S $0 "$@"'
    if 0;
#/home/production/cvs/JSOC/base/sums/scripts/sum_stop_j1
#This is to stop the sum_svc and related servers on j1 for DB jsoc_sums.
#Also stops the tape_svc and related servers on d02.
#
$| = 1;                 #flush output as we go
$ENV{'SUMSERVER'} = "j1";	#make sure we stay in this machine
$DB = "jsoc_sums";	#the "real" db that production uses for sums
#$DB = "jim";		#the "real" db that production uses for sums
$DBDRMS = "jsoc_sums";	#the db sum_pe_rpc uses for drms
$GREPPS = "388";
#$GREPPS = "jim";
$HOST = "j1";		#where sum_svc and this runs

$user = $ENV{'USER'};
if($user ne "production") {
  print "You must be user production to run\n";
  exit;
}
$host = `hostname`;
chomp($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}
$mailflg = 1;
$forceflg = 0;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-M(.*)/) {
    $mailflg = 0;
  }
  elsif (/^-f(.*)/) {
    $forceflg = 1;
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}

print "  If you are asked for a passphrase then you do not have \n";
print "  ssh-agent set up properly on $HOST.\n";
print "  Ctrl-C this script, and do this:\n";
print "  > ssh-agent | head -2 > /tmp/ssh-agent.env
  > chmod 600 /tmp/ssh-agent.env
  > source /tmp/ssh-agent.env
  > ssh-add
  (The production password)\n";

#`ssh d02.stanford.edu touch /tmp/sumstartXX`;  #!!TBD ck how this is used

$PID = getppid;
$LOGFILE = "/tmp/sum_stop_j1.$PID";
$MLOGFILE = "/tmp/sum_stop_mail_j1.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "\nsum_stop_j1 at $date\n\n";
print LOG "sum_stop_j1 at $date\n\n";
print MLOG "sum_stop_j1 at $date\n";
print MLOG "See $LOGFILE on $host for more details\n";
  print "NOTE: This will stop sum_svc and tape_svc. Make sure you want to do this\n";

  print "Enter reason for stop (terminate with single '.' or ^D):\n>> ";
  print LOG "Enter reason for stop (terminate with single '.' or ^D):\n";
  print MLOG "Enter reason for stop (terminate with single '.' or ^D):\n";
  while(<STDIN>) {
    chomp($_);
    if($_ eq ".") { last; }
    else {
      print LOG ">> $_\n"; print MLOG ">> $_\n";
      print ">> ";
    }
  }
  print "Please identify yourself:\n>> ";
  print LOG "Please identify yourself:\n";
  print MLOG "Please identify yourself:\n";
  $ID = <STDIN>;
  chomp($ID);
  if(!$ID) { $ID = "<none>"; }
  print LOG ">> $ID\n"; print MLOG ">> $ID\n";

  @ps_prod = `ps -ef | grep $GREPPS`;
  while($_ = shift(@ps_prod)) {
    if(/^$GREPPS/) {
      if(/sumck/) {
        ($a, $psid, $c) = split(/\s+/, $_);
        $process = "sumck";
        print "Killing $process with kill -9 $psid\n";
        print LOG "Killing $process with kill -9 $psid\n";
        `kill -9 $psid`;
        last;
      }
    }
  }
@ps_prod = `ps -ef | grep $GREPPS`;
print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";
while($_ = shift(@ps_prod)) {
  if(/^$GREPPS/) {		#do for all production processes
    if(/sum_stop_j1/) {	#don't kill ourselves
      next;
    }
    if(/sum_svc $DB/ || /sum_svc -o $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_svc";
      if($forceflg == 0) {	#first check for active users
        @adv = `sum_adv`;
        $state = shift(@adv);
        chomp($state);
        if($state == 0) {
          print "sum_svc has active users. Please try again later.\n";
          print "All new SUM_open() have been forbidden\n";
          print "Call with -f to force a stop\n";
          exit(0);
        }
      }
    }
    elsif(/sum_rm $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_rm";
    }
    elsif(/sum_pe_svc $DBDRMS/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_pe_svc";
    }
    elsif(/sum_forker $DBDRMS/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_forker";
    }
    else {
      next;
    }
    print "Killing $process with kill -2 $psid\n";
    print LOG "Killing $process with kill -INT $psid\n";
    if($process eq "sum_pe_svc") {
      `kill -9 $psid`;
    }
    else {
      `kill -2 $psid`;
    }
  }
}

#Now kill the tape_svc, etc on n02
`ssh d02.stanford.edu /home/production/cvs/JSOC/base/sums/scripts/sum_stop_d02_tape`;

#print "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#print LOG "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#`/bin/rm -f /usr/local/logs/soc/NOTAPEARC`;

print "SUM Stop_j1 Complete\n";
print LOG "SUM Stop_j1 Complete\n";
close(LOG);
close(MLOG);
$mail = "Mail -s \"SUM Stop_j1 Complete\"";
$to = "jsoc_users";
#$to = "jim";
$cmd = "$mail $to < $MLOGFILE";
if($mailflg) { system $cmd; }
