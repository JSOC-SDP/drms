eval 'exec /home/jsoc/bin/$JSOC_MACHINE/perl -S $0 "$@"'
    if 0;
#/home/production/cvs/JSOC/base/sums/scripts/gChart_user_sums.pl
#
#This is normally run as a cron job by production on d02:
#55 3 * * * /home/production/cvs/JSOC/base/sums/scripts/gChart_user_sums_cron.pl
#
#Makes a html file to dislay the sum storage by user by day charts.
#The display is for the last 7 days from the date given in the args.
#Puts the html in /home/jsoc/public_html/SUMS/gChartBasicSums.html.
#Uses the file, e.g., gChart_data/gChart_user_data.out.sort.2012.06.20 for the input data.
#This data is generated by gChart_user_data.pl run on n02 as:
#45 0 * * * /home/production/cvs/JSOC/base/sums/scripts/gChart_cron.pl
#
#Also makes a chart of the closed tape count in and out of the T950.
#This uses the file gChart_data/tape_by_ds_shelf.log.2012.09.11 generated by
#tape_by_ds_shelf.pl which is run as a cron job before this gChart_user_sums.pl.
#45 2 * * * /home/production/cvs/JSOC/base/sums/scripts/tape_by_ds_shelf.pl
#

sub usage {
  print "Create /home/jsoc/public_html/SUMS/gChartBasicSums.html.\n";
  print "This will dislay the sum storage by user charts for the last 7 days.\n";
  print "Usage: gChart_user_sums.pl [-h] daydate\n";
  print "       -h = help info\n";
  print "daydate = the last of the 7 days, e.g. 2012.06.25\n";
  exit(1);
}

sub bybytes {
  $HofBytes{$a} <=> $HofBytes{$b};
}
sub numerical {
  $a <=> $b;
}
sub commify {
  local $_  = shift;
  1 while s/^([-+]?\d+)(\d{3})/$1,$2/;
  return $_;
}


#Return date in form for a label e.g. 1998.01.07_14:42:04
sub labeldate {
  local($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst,$date,$sec2,$min2,$hour2,$mday2,$year2);
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
  $sec2 = sprintf("%02d", $sec);
  $min2 = sprintf("%02d", $min);
  $hour2 = sprintf("%02d", $hour);
  $mday2 = sprintf("%02d", $mday);
  $mon2 = sprintf("%02d", $mon+1);
  $year4 = sprintf("%04d", $year+1900);
  $date = $year4.".".$mon2.".".$mday2._.$hour2.":".$min2.":".$sec2;
  return($date);
}

while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-h(.*)/) {
    &usage;
  }
}

if($#ARGV != 0) {
  &usage;
}
$daydate = $ARGV[0];

$outfile = "/home/jsoc/public_html/SUM/gChartBasicSums.html";
$datafile = "/home/production/cvs/JSOC/base/sums/scripts/gChart_data/gChart_user_data.out.sort";
$meanfile = "/home/production/cvs/JSOC/base/sums/scripts/total.mean";
$ldate = &labeldate();
$cmd = "time_index -d in=$daydate";
$daynum7 = `$cmd`;
chomp($daynum7);
$daynum6 = $daynum7-1;
$daynum5 = $daynum7-2;
$daynum4 = $daynum7-3;
$daynum3 = $daynum7-4;
$daynum2 = $daynum7-5;
$daynum1 = $daynum7-6;
$cmd = "time_index -t day=$daynum1";
$ttag1 = `$cmd`;
$pos = index($ttag1, '_');
$ttag1 = substr($ttag1, 0, $pos);
$lab1 = substr($ttag1, 5);
$cmd = "time_index -t day=$daynum2";
$ttag2 = `$cmd`;
$pos = index($ttag2, '_');
$ttag2 = substr($ttag2, 0, $pos);
$lab2 = substr($ttag2, 5);
$cmd = "time_index -t day=$daynum3";
$ttag3 = `$cmd`;
$pos = index($ttag3, '_');
$ttag3 = substr($ttag3, 0, $pos);
$lab3 = substr($ttag3, 5);
$cmd = "time_index -t day=$daynum4";
$ttag4 = `$cmd`;
$pos = index($ttag4, '_');
$ttag4 = substr($ttag4, 0, $pos);
$lab4 = substr($ttag4, 5);
$cmd = "time_index -t day=$daynum5";
$ttag5 = `$cmd`;
$pos = index($ttag5, '_');
$ttag5 = substr($ttag5, 0, $pos);
$lab5 = substr($ttag5, 5);
$cmd = "time_index -t day=$daynum6";
$ttag6 = `$cmd`;
$pos = index($ttag6, '_');
$ttag6 = substr($ttag6, 0, $pos);
$lab6 = substr($ttag6, 5);
$ttag7 = $daydate;
$lab7 = substr($ttag7, 5);

open(OUT,">$outfile") || die "Can't open $outfile: $!\n";

#output the xhtml header stuff
print OUT <<EOF;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>jQuery Google Chart</title>
<style type="text/css">
h2 { text-align: center }
#basicGChart0 {
position:absolute;
left:0px;
top:120px;
width: 550px; height: 280px
}
#basicGChart99 {
position:absolute;
left:600px;
top:120px;
width: 450px; height: 280px
}
#basicGChart98 {
position:absolute;
left:0px;
top:420px;
width: 850px; height: 280px
}
#basicGChart1 {
position:absolute;
left:0px;
top:720px;
width: 450px; height: 280px
}
#basicGChart2 {
position:absolute;
left:400px;
top:720px;
width: 450px; height: 280px
}
#basicGChart3 {
position:absolute;
left:800px;
top:720px;
width: 450px; height: 280px
}
#basicGChart4 {
position:absolute;
left:0px;
top:1020px;
width: 450px; height: 280px
}
#basicGChart5 {
position:absolute;
left:400px;
top:1020px;
width: 450px; height: 280px
}
#basicGChart6 {
position:absolute;
left:800px;
top:1020px;
width: 450px; height: 280px
}
#basicGChart7 {
position:absolute;
left:0px;
top:1320px;
width: 450px; height: 280px
}
#basicGChart8 {
position:absolute;
left:400px;
top:1320px;
width: 450px; height: 280px
}
#basicGChart9 {
position:absolute;
left:800px;
top:1320px;
width: 450px; height: 280px
}
#basicGChart10 {
position:absolute;
left:0px;
top:1620px;
width: 450px; height: 280px
}
#basicGChart11 {
position:absolute;
left:400px;
top:1620px;
width: 450px; height: 280px
}
#basicGChart12 {
position:absolute;
left:800px;
top:1620px;
width: 450px; height: 280px
}
#basicGChart13 {
position:absolute;
left:0px;
top:1920px;
width: 450px; height: 280px
}
#basicGChart14 {
position:absolute;
left:400px;
top:1920px;
width: 450px; height: 280px
}
#basicGChart15 {
position:absolute;
left:800px;
top:1920px;
width: 450px; height: 280px
}
#basicGChart16 {
position:absolute;
left:0px;
top:2220px;
width: 450px; height: 280px
}
</style>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
<script type="text/javascript" src="jquery.gchart.js"></script>
<script type="text/javascript">
\$(function () {
EOF

$in1 = $datafile.".".$ttag1;
$in2 = $datafile.".".$ttag2;
$in3 = $datafile.".".$ttag3;
$in4 = $datafile.".".$ttag4;
$in5 = $datafile.".".$ttag5;
$in6 = $datafile.".".$ttag6;
$in7 = $datafile.".".$ttag7;

#has the in file line for each user
%HofUser1 = ();	#hash key is user name, e.g. jsocprod
%HofUser2 = ();	
%HofUser3 = ();
%HofUser4 = ();
%HofUser5 = ();
%HofUser6 = ();
%HofUser7 = ();
#has the total bytes accross all in files
%HofBytes = ();	#hash key is user name, e.g. jsocprod
@users = ();

#An in file looks like:
#5919878277920 4 5,919,878,277,920 jsocprod
#728041440478 3 728,041,440,478 rick
#552907211772 3 552,907,211,772 jps

#open(ID, $in1) || die "Can't open $in1: $!\n";
open(ID, $in1) || goto IN2;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser1{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN2:
open(ID, $in2) || goto IN3;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser2{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN3:
open(ID, $in3) || goto IN4;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser3{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN4:
open(ID, $in4) || goto IN5;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser4{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN5:
open(ID, $in5) || goto IN6;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser5{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN6:
open(ID, $in6) || goto IN7;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser6{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);
IN7:
open(ID, $in7) || goto TEMP;
while(<ID>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  chomp;
  ($by, $ccnt, $cby, $user) = split(/\s+/);
  $HofUser7{$user} = $_;
  if(!grep(/$user/, @users)) {
    push(@users, $user);
    $HofBytes{$user} = $by;
  }
  else {
    $x = $HofBytes{$user};
    $y = $x + $by;
    $HofBytes{$user} = $y;
  }
}
close(ID);

TEMP:
#Now sort by user by total bytes
@sortusers = sort bybytes @users;
@xusers = @sortusers;
$t1=$t2=$t3=$t4=$t5=$t6=$t7=0;  #total by day for all users
while($u = shift(@xusers)) {
  ($by1, $ccnt1) = split(/\s+/, $HofUser1{$u});
  $t1 += $by1;
  ($by2, $ccnt2) = split(/\s+/, $HofUser2{$u});
  $t2 += $by2;
  ($by3, $ccnt3) = split(/\s+/, $HofUser3{$u});
  $t3 += $by3;
  ($by4, $ccnt4) = split(/\s+/, $HofUser4{$u});
  $t4 += $by4;
  ($by5, $ccnt5) = split(/\s+/, $HofUser5{$u});
  $t5 += $by5;
  ($by6, $ccnt6) = split(/\s+/, $HofUser6{$u});
  $t6 += $by6;
  ($by7, $ccnt7) = split(/\s+/, $HofUser7{$u});
  $t7 += $by7;
}
push(@sortusers, 'REMOVED');	#put at next to top of sorted array
push(@sortusers, 'TOTAL');	#put at top of sorted array
$cmd = "grep daynum=$daynum1 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED"); #fill in REMOVED
$cmd = "grep daynum=$daynum2 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");
$cmd = "grep daynum=$daynum3 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");
$cmd = "grep daynum=$daynum4 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");
$cmd = "grep daynum=$daynum5 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");
$cmd = "grep daynum=$daynum6 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");
$cmd = "grep daynum=$daynum7 /home/production/cvs/JSOC/base/sums/scripts/total.rm";
$rem = `$cmd`;
chomp($rem);
$pos = index($rem, ':');
$remx = substr($rem, $pos+1);
push(@reminfo, "$remx 666 REMOVED");

for($i=1; $i < 8; $i++) {
  $tx = "\$t"."$i";
  $cmd = "\$bcx = commify($tx)";
  eval($cmd);
  $ccnt = 0;
  while(($pos = index($bcx, ',')) != -1) {
     $bcx = substr($bcx, $pos+1);
     $ccnt++;
  }
  $tentry = "\"$tx \$ccnt 666 TOTAL\"";  #the 666 is a phoney entry and is never used
  $tx = eval($tentry);
  $H = "\$HofUser"."$i"."{TOTAL} = \$tx";
  eval($H);
  #put in phoney numbers for now for REMOVED
  $tx = shift(@reminfo);
  $H = "\$HofUser"."$i"."{REMOVED} = \$tx";
  eval($H);
}
#The basicGChart99 div for the 'mean removed by month', was added later
#and is treated here as a special case. The data is in the total.mean file.
#A line looks like:
#MEAN for May  = 8935346854662 with start_daynum=7080
open(MN, $meanfile) || goto SKIPMEAN;
$janby=$febby=$marby=$aprby=$mayby=$junby=$julby=$augby=$sepby=$octby=$novby=$decby=0;
while(<MN>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  if(/^MEAN/) {
    ($a,$b,$mo,$c,$by) = split(/\s+/);
    if($mo eq "Jan") { $janby = $by/1000000000000; }
    elsif ($mo eq "Feb") { $febby = $by/1000000000000; }
    elsif ($mo eq "Mar") { $marby = $by/1000000000000; }
    elsif ($mo eq "Apr") { $aprby = $by/1000000000000; }
    elsif ($mo eq "May") { $mayby = $by/1000000000000; }
    elsif ($mo eq "Jun") { $junby = $by/1000000000000; }
    elsif ($mo eq "Jul") { $julby = $by/1000000000000; }
    elsif ($mo eq "Aug") { $augby = $by/1000000000000; }
    elsif ($mo eq "Sep") { $sepby = $by/1000000000000; }
    elsif ($mo eq "Oct") { $octby = $by/1000000000000; }
    elsif ($mo eq "Nov") { $novby = $by/1000000000000; }
    elsif ($mo eq "Dec") { $decby = $by/1000000000000; }
  }
}
close(MN);
  print OUT "\$('#basicGChart99').gchart({type: 'barVert', maxValue: 12, title: 'MEAN Daily TB Removed by Month', titleColor: 'green', backgroundColor: \$.gchart.gradient('horizontal', 'ccffff', 'ccffff00'), series: [\$.gchart.series('Storage', [$janby, $febby, $marby, $aprby, $mayby, $junby, $julby, $augby, $sepby, $octby, $novby, $decby], 'red')],axes: [\$.gchart.axis('bottom', ['Jan','Feb','Mar','Apr','May','Jun','Jul', 'Aug','Sep','Oct','Nov','Dec'], 'black'),\$.gchart.axis('left', 0, 12, 'black', 'right'),\$.gchart.axis('left', ['TB'], [50], 'black', 'right')],});\n";

SKIPMEAN:
$i = 0;
$diver = 1;
while($u = pop(@sortusers)) {
  $gchart = "basicGChart"."$i";
  ($by1, $ccnt1) = split(/\s+/, $HofUser1{$u});
  ($by2, $ccnt2) = split(/\s+/, $HofUser2{$u});
  ($by3, $ccnt3) = split(/\s+/, $HofUser3{$u});
  ($by4, $ccnt4) = split(/\s+/, $HofUser4{$u});
  ($by5, $ccnt5) = split(/\s+/, $HofUser5{$u});
  ($by6, $ccnt6) = split(/\s+/, $HofUser6{$u});
  ($by7, $ccnt7) = split(/\s+/, $HofUser7{$u});
  @sortccnt = sort numerical $ccnt1,$ccnt2,$ccnt3,$ccnt4,$ccnt5,$ccnt6,$ccnt7;
  $maxccnt = pop(@sortccnt);
  if($maxccnt == 5) {
    $btxt = "PetaBytes";
    $bbtxt = "PB";
    $diver = 1000000000000000;
    $color = "orange";
  }
  elsif ($maxccnt == 4) {
    $btxt = "TeraBytes";
    $bbtxt = "TB";
    $diver = 1000000000000;
    $color = "purple";
  }  
  elsif ($maxccnt == 3) {
    $btxt = "GigaBytes";
    $bbtxt = "GB";
    $diver = 1000000000;
    $color = "blue";
  }
  elsif ($maxccnt == 2) {
    $btxt = "MegaBytes";
    $bbtxt = "MB";
    $diver = 1000000;
    $color = "green";
  }
  elsif ($maxccnt == 1) {
    $btxt = "KBytes";
    $bbtxt = "KB";
    $diver = 1000;
    $color = "green";
  }
  $barcolor = "grey";
  @sortby = sort numerical $by1,$by2,$by3,$by4,$by5,$by6,$by7;
  $maxby = pop(@sortby);
  $maxval = $maxby/$diver;
  $imax = int($maxval);
  $imax++; $imax++;		#!!TEMP double inc
  $byx1 = $by1/$diver;
  $byx2 = $by2/$diver;
  $byx3 = $by3/$diver;
  $byx4 = $by4/$diver;
  $byx5 = $by5/$diver;
  $byx6 = $by6/$diver;
  $byx7 = $by7/$diver;
  if($i == 0) { 
    $uz = pop(@sortusers);  #the REMOVED user
    ($by1, $ccnt1) = split(/\s+/, $HofUser1{$uz});
    ($by2, $ccnt2) = split(/\s+/, $HofUser2{$uz});
    ($by3, $ccnt3) = split(/\s+/, $HofUser3{$uz});
    ($by4, $ccnt4) = split(/\s+/, $HofUser4{$uz});
    ($by5, $ccnt5) = split(/\s+/, $HofUser5{$uz});
    ($by6, $ccnt6) = split(/\s+/, $HofUser6{$uz});
    ($by7, $ccnt7) = split(/\s+/, $HofUser7{$uz});
    $byz1 = $by1/$diver;
    $byz2 = $by2/$diver;
    $byz3 = $by3/$diver;
    $byz4 = $by4/$diver;
    $byz5 = $by5/$diver;
    $byz6 = $by6/$diver;
    $byz7 = $by7/$diver;
    $color = "green"; $barcolor = "green";
    print OUT "\$('#$gchart').gchart({type: 'line', maxValue: $imax, title: '$u: $btxt per day', titleColor: '$color', backgroundColor: \$.gchart.gradient('horizontal', 'ccffff', 'ccffff00'), series: [\$.gchart.series('Written', [$byx1, $byx2, $byx3, $byx4, $byx5, $byx6, $byx7], '$barcolor'),\$.gchart.series('Removed', [$byz1, $byz2, $byz3, $byz4, $byz5, $byz6, $byz7], 'red')],axes: [\$.gchart.axis('bottom', ['$lab1','$lab2','$lab3','$lab4','$lab5','$lab6','$lab7'], 'black'),\$.gchart.axis('left', 0, $imax, 'black', 'right'),\$.gchart.axis('left', ['$bbtxt'], [50], 'black', 'right')],legend: 'right'});\n";
  }
  else {
    print OUT "\$('#$gchart').gchart({type: 'barVert', maxValue: $imax, title: '$u: $btxt per day', titleColor: '$color', backgroundColor: \$.gchart.gradient('horizontal', 'ccffff', 'ccffff00'), series: [\$.gchart.series('Storage', [$byx1, $byx2, $byx3, $byx4, $byx5, $byx6, $byx7], '$barcolor')],axes: [\$.gchart.axis('bottom', ['$lab1','$lab2','$lab3','$lab4','$lab5','$lab6','$lab7'], 'black'),\$.gchart.axis('left', 0, $imax, 'black', 'right'),\$.gchart.axis('left', ['$bbtxt'], [50], 'black', 'right')],});\n";
  }
  $i++;
}
#chart98 was added later to show the tape count in and out of the t950 robot.
$infocmd = "ls -t /home/production/cvs/JSOC/base/sums/scripts/gChart_data/tape_by_ds_shelf.log*";
@tfiles = `$infocmd`;
$tfile = shift(@tfiles);
print "Open:\n$tfile\n";
open (TF,"<$tfile")  or die "can't open $tfile: $!";
$i = 0;
while(<TF>) {
  if(/^#/ || /^\n/) { #ignore any comment or blank lines
    next;
  }
  if(/^Total /) {
    #a line looks like:
    #Total for hmi.tlm tapes in robot=27  tapes out of robot=652
    #Assumes order is: hmi.tlm, aia.tlm, hmi.lev0a, aia.lev0, hmi.lev1, hmi>lev1 
    ($a, $b, $ds, $d, $e, $inrob, $f, $g, $h, $outrob) = split(/\s+/);
    ($a, $inrobot) = split(/=/, $inrob);
    ($a, $outrobot) = split(/=/, $outrob);
    $x = "\$inrob"."$i = \$inrobot";
    eval($x);
    $y = "\$outrob"."$i = \$outrobot";
    eval($y);
    $i++;
  }
}
#!!!TBD: fill in with values in @tapeinfo
  print OUT "\$('#basicGChart98').gchart({type: 'barVertGrouped', maxValue: 1200, title: 'Tape count in/out of T950', titleColor: 'green', barWidth: 30, backgroundColor: \$.gchart.gradient('horizontal', 'ccffff', 'ccffff00'),
    markers: [
        \$.gchart.marker('text', 'green', 0, 0, 13, 'above', '$inrob0'),
        \$.gchart.marker('text', 'green', 0, 1, 13, 'above', '$inrob1'),
        \$.gchart.marker('text', 'green', 0, 2, 13, 'above', '$inrob2'),
        \$.gchart.marker('text', 'green', 0, 3, 13, 'above', '$inrob3'),
        \$.gchart.marker('text', 'green', 0, 4, 13, 'above', '$inrob4'),
        \$.gchart.marker('text', 'green', 0, 5, 13, 'above', '$inrob5'),
        \$.gchart.marker('text', 'green', 0, 6, 13, 'above', '$inrob6'),
        \$.gchart.marker('text', 'green', 0, 7, 13, 'above', '$inrob7'),
        \$.gchart.marker('text', 'green', 0, 8, 13, 'above', '$inrob8'),
        \$.gchart.marker('text', 'red', 1, 0, 13, 'above', '$outrob0'),
        \$.gchart.marker('text', 'red', 1, 1, 13, 'above', '$outrob1'),
        \$.gchart.marker('text', 'red', 1, 2, 13, 'above', '$outrob2'),
        \$.gchart.marker('text', 'red', 1, 3, 13, 'above', '$outrob3'),
        \$.gchart.marker('text', 'red', 1, 4, 13, 'above', '$outrob4'),
        \$.gchart.marker('text', 'red', 1, 5, 13, 'above', '$outrob5'),
        \$.gchart.marker('text', 'red', 1, 6, 13, 'above', '$outrob6'),
        \$.gchart.marker('text', 'red', 1, 7, 13, 'above', '$outrob7'),
        \$.gchart.marker('text', 'red', 1, 8, 13, 'above', '$outrob8')
    ],
 series: [\$.gchart.series('Robot', ['$inrob0', '$inrob1', '$inrob2', '$inrob3', '$inrob4', '$inrob5', '$inrob6', '$inrob7', '$inrob8'], 'green'),
        \$.gchart.series('Shelf', ['$outrob0', '$outrob1', '$outrob2', '$outrob3', '$outrob4', '$outrob5', '$outrob6', '$outrob7', '$outrob8'], 'red')
 ],
  axes: [
      \$.gchart.axis('bottom', ['hmi.tlm', 'aia.tlm', 'hmi.lev0a', 'aia.lev0', 'hmi.lev1', 'rdVtrack_fd05', 'rdVtrack_fd15', 'rdVtrack_fd30', 'hmi>lev1'], 'black'),
      \$.gchart.axis('left', 0, 1200, 'black', 'right'),
      \$.gchart.axis('left', ['#'], [50], 'black', 'right')
  ],
  legend: 'right',
});\n";


TEMP1:
print OUT "});\n";
print OUT <<EOF1;
</script>
</head>
<body>
<h2>SUM storage (in descending order) by user per day (ending $ttag7)</h2>
<h2>!!NOTE: Changed to once a week instead of daily!!</h2>
<div id="basicGChart0">
</div>
<div id="basicGChart98">
</div>
<div id="basicGChart99">
</div>
<div id="basicGChart1">
</div>
<div id="basicGChart2">
</div>
<div id="basicGChart3">
</div>
<div id="basicGChart4">
</div>
<div id="basicGChart5">
</div>
<div id="basicGChart6">
</div>
<div id="basicGChart7">
</div>
<div id="basicGChart8">
</div>
<div id="basicGChart9">
</div>
<div id="basicGChart10">
</div>
<div id="basicGChart11">
</div>
<div id="basicGChart12">
</div>
<div id="basicGChart13">
</div>
<div id="basicGChart14">
</div>
<div id="basicGChart15">
</div>
<div id="basicGChart16">
</div>
</body>
</html>
EOF1
close(OUT);
print "output file at: $outfile\n";
