#!/usr/bin/perl
# This is to start the sum_svc and related servers.
# Call with -f to force a stop if needed.
# Call with -X to skip sum check

$| = 1;                 #flush output as we go

if (!defined ($ENV{'DRMS'})) {
  $BPATH = `which sum_svc`;
  if ($BPATH !~ /\S+/) {
    print "\nenvironment variable \$DRMS undefined and sum_svc not in path\n";
    exit;
  }
  $BPATH = `dirname $BPATH`;
  $BPATH = `dirname $BPATH`;
  $DRMS = `dirname $BPATH`;
  chomp ($DRMS);
  $LOCALINF = "$DRMS/config.local";
} else {
  $LOCALINF = "$ENV{'DRMS'}/config.local";
}
open (CMD, "<$LOCALINF");
while (defined ($line = <CMD>)) {
  chomp ($line);
  if ($line =~ /^DRMS_DATABASE\s+(.+)/) {
    $DBDRMS = $1;
    $DB = "$DBDRMS\_sums"
  }
  if ($line =~ /^SUMS_SERVER_HOST\s+(.+)/) {
    $HOST = $1;
    $HOST = lc ($HOST);
  }
  if ($line =~ /^SUMS_MANAGER\s+(.+)/) {
    $SUMGR = $1;
  }
}
close (CMD);

$user = $ENV{'USER'};
if ($user ne $SUMGR) {
  print "You must be user $SUMGR to run\n";
  exit;
}
$ENV{'DBHOSTNAME'} = $HOST;
$GREPPS = `id -u`;
chomp ($GREPPS);
$host = `hostname -s`;
chomp ($host);
$host = lc ($host);
if ($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}

$forceflg = 0;
$forcearg = "";
$sumck = 1;
$mailflg = 1;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-f(.*)/) {
    $forceflg = 1;
    $forcearg = "-f";
  } elsif (/^-X(.*)/) {
    $sumck = 0;
  } elsif (/^-M(.*)/) {
    $mailflg = 0;
  } else {
    print "Illegal switch\n";
    exit;
  }
}

$PID = getppid;
$LOGFILE = "/tmp/sum_start.$PID";
$MLOGFILE = "/tmp/sum_start_mail.$PID";

open (LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open (MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
$dtag = (1900 + $year).".".$mon2.".$mday2".".$hour2"."$min2"."$sec2"; #for log name
$sumlog = "sum_svc_$dtag.log";

print "\nsum_start at $date\n\n";
print LOG "sum_start at $date\n\n";
print MLOG "sum_start at $date\n";
print MLOG "See $LOGFILE on $host for more details\n";

@ps_prod = `ps -ef | grep $GREPPS`;
print LOG "The ps -ef for $SUMGR is:\n@ps_prod\n";

while ($_ = shift(@ps_prod)) {
  if (/^$GREPPS/) {		#do for all production processes
    if (/sum_start/) {	#don't kill ourselves
      next;
    }
    if (/sum_svc $DB/ || /sum_svc -o $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_svc";
    } elsif (/sum_rm $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_rm";
    } elsif (/sumck/) {
      if ($sumck) {
        ($a, $psid, $c) = split(/\s+/, $_);
        $process = "sum_ck";
      }
    } else {
      next;
    }
    print "** NOTE: \"$process $DB\" still running\n";
    print LOG "** NOTE: \"$process $DB\" still running\n";
    print "Do you want me to do a sum_stop followed by a sum_start for you (y or n):\n";
    while (<STDIN>) {
      chop ($_);
      if (($_ eq "Y") || ($_ eq "y")) { 
        if ($sumck) {
          $cmd = "sum_stop $forcearg";
        } else {
          $cmd = "sum_stop -X $forcearg";
        }
        if (system ($cmd)) {
          print "Error: failure on sum_stop\n";
          exit;
        }
# make sure nothing left running
        @ps_prod = `ps -ef | grep $GREPPS`;
        while ($_ = shift(@ps_prod)) {
          if(/^$GREPPS/) {	#do for all production processes
            if (/sum_svc $DB/ || /sum_svc -o $DB/) {
              print "Error: sum_svc $DB still running after sum_stop?\n";
              exit;
            } elsif (/sum_rm $DB/) {
              print "Error: sum_rm $DB still running after sum_stop?\n";
              exit;
            } elsif (/sum_pe_svc $DB/) {
              print "Error: sum_pe_svc $DB still running after sum_stop?\n";
              exit;
            } else {
              next;
            }
          }
        }
        last;
      } else { 
        print "Aborting sum_start\n";
        exit;
      }
    }
  }
}

print "** Now starting: sum_svc $DB $sumlog\n";
print LOG "** Now starting: sum_svc $DB $sumlog\n";

$cmd = "sum_svc $DB $sumlog &";
if (system($cmd)) {
  print "Error: failure on sum_svc $DB $sumlog\n";
}

#if ($sumck) {
#  $cmd = "sum_ck &";
#  if (system($cmd)) {
#    print "Error: failure on sum_ck\n";
#  }
#}

print "SUMS Start Complete\n";
print LOG "SUMS Start Complete\n";
close (LOG);
close (MLOG);
  
# $mail = "Mail -s \"SUM Start Complete\"";
# $to = "drms_users";
# $cmd = "$mail $to < $MLOGFILE";
# if ($mailflg) { system $cmd; }

exit;
