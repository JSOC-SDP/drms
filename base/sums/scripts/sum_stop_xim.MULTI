eval 'exec /home/jsoc/bin/$JSOC_MACHINE/perl -S  $0 "$@"'
    if 0;
#/home/production/cvs/JSOC/base/sums/scripts/sum_stop_xim.MULTI
#This is to stop the xsum_svc and multiple related servers on xim.
#

use FindBin qw($RealBin);
use lib "$RealBin/../../../localization";
use drmsparams;

# Get localized parameter values.
$cfg = new drmsparams();

if (!defined($cfg))
{
    print STDERR "ERROR: Cannot get DRMS parameters.\n";
    exit(1);
}

$| = 1;                 #flush output as we go
$mailflg = 1;
$forceflg = 0;
while ($ARGV[0] =~ /^-/) {
  $_ = shift;
  if (/^-M(.*)/) {
    $mailflg = 0;
  }
  elsif (/^-f(.*)/) {
    $forceflg = 1;
  }
  else {
    print "Illegal switch\n";
    exit;
  }
}

#print "  If you are asked for a passphrase then you do not have \n";
#print "  ssh-agent set up properly on $HOST.\n";
#print "  Ctrl-C this script, and do this:\n";
#print "  > ssh-agent | head -2 > /var/tmp/ssh-agent.env
#  > chmod 600 /var/tmp/ssh-agent.env
#  > source /var/tmp/ssh-agent.env
#  > ssh-add
#  (The production password)\n";

$numsum = $cfg->get('SUM_NUMSUM');
if(!defined($numsum) || !$numsum) {
    print "ERROR: Can't get SUM_NUMSUM definition.\n";
    exit(1);
}
#print "Number of SUM process sets to spawn = $numsum\n";

$maxnumsum = $cfg->get('SUM_MAXNUMSUM');
#print "Max number of SUM process can spawn = $maxnumsum\n";

if($numsum == 0 || !defined($maxnumsum) || $numsum > $maxnumsum) {
  print "**ERROR: in definition of SUM_NUMSUM\n";
  print "Number must be between 1 and $maxnumsum\n";
  exit;
}

$sumserver = $cfg->get('SUMSERVER');
# Strip domain.
if (($pos = index($sumserver, '.')) != -1)
{
    $sumserver = substr($sumserver, 0, $pos);
}

$host = `hostname`;
chomp($host);
# Strip domain.
if(($pos = index($host, '.')) != -1) {
  $host = substr($host, 0, $pos);
}

#for specific script sum_start_xim.MULTI force xim
$sumserver = "xim";     #!!!Special case for testing
if($host ne $sumserver) {
  print "This can only be run on $sumserver.\n";
  exit;
}

$sumsmanager = $cfg->get('SUMS_MANAGER');
#print "SUMS_MANAGER is $sumsmanager\n";
$user = $ENV{'USER'};
if($user ne $sumsmanager) {
  print "You must be user $sumsmanager to run\n";
  exit;
}

$sumsmanageruid = $cfg->get('SUMS_MANAGER_UID');
#print "SUMS_MANAGER_UID is $sumsmanageruid\n";
$GREPPS = $sumsmanageruid;

$dbname = $cfg->get('DBNAME');
$DB = $dbname."_sums";

$DB = "jim";  #!!TEMP override

$PID = getppid;
$LOGFILE = "/tmp/sum_stop_xim_multi.$PID";
$MLOGFILE = "/tmp/sum_stop_mail_xim_multi.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "\nsum_stop_xim.MULTI at $date\n\n";
print LOG "sum_stop_xim.MULTI at $date\n\n";
print MLOG "sum_stop_xim.MULTI at $date\n";
print MLOG "See $LOGFILE on $host for more details\n";
  print "NOTE: This will stop xsum_svc and tape_svc. Make sure you want to do this\n";

#goto SKIP;
  print "Enter reason for stop (terminate with single '.' or ^D):\n>> ";
  print LOG "Enter reason for stop (terminate with single '.' or ^D):\n";
  print MLOG "Enter reason for stop (terminate with single '.' or ^D):\n";
  while(<STDIN>) {
    chomp($_);
    if($_ eq ".") { last; }
    else {
      print LOG ">> $_\n"; print MLOG ">> $_\n";
      print ">> ";
    }
  }
  print "Please identify yourself:\n>> ";
  print LOG "Please identify yourself:\n";
  print MLOG "Please identify yourself:\n";
  $ID = <STDIN>;
  chomp($ID);
  if(!$ID) { $ID = "<none>"; }
  print LOG ">> $ID\n"; print MLOG ">> $ID\n";
SKIP:
  @ps_prod = `ps -ef | grep $GREPPS`;

  #All possible sums processes to stop
  @spawn = (xsum_svc, Sdelser, Sinfo, Sinfo1, Sinfo2, Sinfo3, Sinfo4, Sinfo5, Sinfo6, Sinfo7, Sput, Sput1, Sput2, Sput3, Sput4, Sput5, Sput6, Sput7, Sget, Sget1, Sget2, Sget3, Sget4, Sget5, Sget6, Sget7, Salloc, Salloc1, Salloc2, Salloc3, Salloc4, Salloc5, Salloc6, Salloc7, Sopen, Sopen1, Sopen2, Sopen3, Sopen4, Sopen5, Sopen6, Sopen7, xtape_svc, xdrive0_svc, xdrive1_svc, xdrive2_svc, xdrive3_svc, xdrive4_svc, xdrive5_svc, xdrive6_svc, xdrive7_svc, xdrive8_svc, xdrive9_svc, xdrive10_svc, xdrive11_svc, xrobot0_svc);

  #first do sumck_ximM
  @line = grep(/sumck_ximM/, @ps_prod);
  $x = shift(@line);
  ($a, $psid, $c) = split(/\s+/, $x);
  print "Killing sumck_ximM with kill -9 $psid\n";
  print LOG "Killing sumck_ximM with kill -9 $psid\n";
  `kill -9 $psid`;

  #Find if any sums process is still running.
  #Assumes max of 8 sum process sets can be running.
  while($p = shift(@spawn)) {
    $name = "$p $db";
    @line = grep(/$name/, @ps_prod);
    if(@line) {
      $x = shift(@line);
      ($a, $psid, $c) = split(/\s+/, $x);
      print "Killing $p with kill -9 $psid\n";
      print LOG "Killing $p with kill -9 $psid\n";
      `kill -9 $psid`;
    }
  }

#Now kill the tape_svc, etc on n02
#`ssh d02.stanford.edu /home/production/cvs/JSOC/base/sums/scripts/sum_stop_d02_tape`;

#print "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#print LOG "Removing lock file /usr/local/logs/soc/NOTAPEARC\n";
#`/bin/rm -f /usr/local/logs/soc/NOTAPEARC`;

print "SUM Stop xim MULTI Complete\n";
print LOG "SUM Sto xim MULTI Complete\n";
close(LOG);
close(MLOG);
$mail = "Mail -s \"SUM Stop xim MULTI Complete\"";
#$to = "jsoc_users";
$to = "jim\@sun.stanford.edu";
$cmd = "$mail $to < $MLOGFILE";
if($mailflg) { system $cmd; }
