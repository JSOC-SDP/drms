#!/usr/bin/perl
#/home/production/cvs/JSOC/base/sums/scripts/sum_stop
#This is to stop the sum_svc and related servers.
#
$| = 1;                 #flush output as we go
#$DB = "jsoc";		#the "real" db that production uses
$DB = "jsocdc";		#the "real" db that production uses
$GREPPS = "388";
#$GREPPS = "jim";
$HOST = "d00.Stanford.EDU"; #where sum_svc runs

$user = $ENV{'USER'};
if($user ne "production") {
  print "You must be user production to run\n";
#  exit;
}
$host = `hostname`;
chomp($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
#  exit;
}

$PID = getppid;
$LOGFILE = "/tmp/sum_stop.$PID";
$MLOGFILE = "/tmp/sum_stop_mail.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "\nsum_stop at $date\n\n";
print LOG "sum_stop at $date\n\n";
print MLOG "sum_stop at $date\n";
print MLOG "See $LOGFILE for more details\n";
print "NOTE: This will stop sum_svc and tape_svc. Make sure you want to do this\n";

print "Enter reason for stop (terminate with single '.' or ^D):\n>> ";
print LOG "Enter reason for stop (terminate with single '.' or ^D):\n";
print MLOG "Enter reason for stop (terminate with single '.' or ^D):\n";
while(<STDIN>) {
  chomp($_);
  if($_ eq ".") { last; }
  else {
    print LOG ">> $_\n"; print MLOG ">> $_\n";
    print ">> ";
  }
}
print "Please identify yourself:\n>> ";
print LOG "Please identify yourself:\n";
print MLOG "Please identify yourself:\n";
$ID = <STDIN>;
chomp($ID);
if(!$ID) { $ID = "<none>"; }
print LOG ">> $ID\n"; print MLOG ">> $ID\n";

#print "Estimated restart time and zone (e.g. 16:30 PST):\n>> ";
#print LOG "Estimated restart time and zone (e.g. 16:30 PST):\n";
#print MLOG "Estimated restart time and zone (e.g. 16:30 PST):\n";
#$RETIME = <STDIN>;
#chomp($RETIME);
#if(!$RETIME) { $RETIME = "<none>"; }
#print LOG ">> $RETIME\n"; print MLOG ">> $RETIME\n";

@ps_prod = `ps -ef | grep $GREPPS`;
print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";
while($_ = shift(@ps_prod)) {
  if(/^$GREPPS/) {		#do for all production processes
    if(/sum_stop/) {		#don't kill ourselves
      next;
    }
    if(/sum_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_svc";
    }
    elsif(/tape_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "tape_svc";
    }
    elsif(/drive0_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive0_svc";
    }
    elsif(/drive1_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive1_svc";
    }
    elsif(/drive2_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive2_svc";
    }
    elsif(/drive3_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "drive3_svc";
    }
    elsif(/robot0_svc $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "robot0_svc";
    }
    elsif(/sum_rm $DB/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "sum_rm";
    }
    elsif(/soc_scp/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "soc_scp";
    }
    elsif(/soc_pipe_scp/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      $process = "soc_pipe_scp";
    }
    else {
      next;
    }
    print "Killing $process with kill -9 $psid\n";
    print LOG "Killing $process with kill -9 $psid\n";
    `kill -9 $psid`; #!!!TEMP noop
  }
}

print "SUM Stop Complete\n";
print LOG "SUM Stop Complete\n";
close(LOG);
close(MLOG);
$mail = "Mail -s \"SUM Stop Complete\"";
#$to = "sssc_crew\@solar2";
$to = "jim@sun.stanford.edu";
$cmd = "$mail $to < $MLOGFILE";
system $cmd;
