/* SUMLIB_MD5info.pgc
 */
#include <SUM.h>
#include <tape.h>
#include <sum_rpc.h>
#include <printk.h>

int SUMLIB_MD5info(char *tapeid);
int SUMLIB_Get_MD5(char *tapeid, int filenum, char *md5ret);

/* Make a md5 info file to send to the offsite system so that it can
 * verify the tape before accepting it in the offsite system. 
 * The file will be: /x/x/x/tapeid.md5
 * Return non-0 on error.
*/
int SUMLIB_MD5info(char *tapeid)
{
EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR l_tapeid[20];
  VARCHAR l_md5cksum[36];
  int l_filenum;
EXEC SQL END DECLARE SECTION;
FILE *md5fp;
char md5file[256], cmd[256];

    sprintf(l_tapeid.arr, "%s", tapeid);
    l_tapeid.len = strlen(l_tapeid.arr);

    EXEC SQL WHENEVER SQLERROR GOTO sqlerror;

        EXEC SQL DECLARE md5cursor CURSOR FOR
        SELECT md5cksum, filenum
        FROM SUM_FILE
        WHERE TAPEID = :l_tapeid;

        EXEC SQL OPEN md5cursor;
    EXEC SQL WHENEVER NOT FOUND GOTO end_fetch;

    sprintf(md5file, "%s/%s.md5", OFFSITEDIR, tapeid);
    if((md5fp=fopen(md5file, "w")) == NULL) {
      printk("Can't open the md5 file %s\n", md5file);
      EXEC SQL CLOSE md5cursor;
      EXEC SQL ROLLBACK WORK;
      return(1);
    }
    fprintf(md5fp, "# %s from datacapture\n", md5file);

    for( ; ; ){
      EXEC SQL FETCH md5cursor INTO :l_md5cksum, :l_filenum;
      fprintf(md5fp, "%u %s\n", l_filenum, l_md5cksum.arr);
    }

end_fetch:
    fclose(md5fp);
    EXEC SQL CLOSE md5cursor;
    EXEC SQL COMMIT;
    //NO don't scp it. leave it in the local dcs machine in /dds/socdc
    //sprintf(cmd, "scp -p %s %s:%s", md5file, OFFSITEHOST, OFFSITEDIR);
    //printk("%s\n", cmd);
    //if(system(cmd)) { 
    //  printk("Error on: %s\n", cmd);
    //  return(1);
    //}
    return(0);

sqlerror:
    fclose(md5fp);
    EXEC SQL ROLLBACK WORK;
    printk("Error in SUMLIB_MD5info for tape %s\n", tapeid);
    printk("% .70s \n", sqlca.sqlerrm.sqlerrmc);
    return(1);
}

int SUMLIB_Get_MD5(char *tapeid, int filenum, char *md5ret)
{
EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR l_tapeid[20];
  VARCHAR l_md5cksum[36];
  int l_filenum;
EXEC SQL END DECLARE SECTION;

    EXEC SQL WHENEVER SQLERROR GOTO sqlerror;
    sprintf(l_tapeid.arr, "%s", tapeid);
    l_tapeid.len = strlen(l_tapeid.arr);
    l_filenum = filenum;
    EXEC SQL SELECT MD5CKSUM into :l_md5cksum FROM SUM_FILE
    WHERE TAPEID = :l_tapeid and FILENUM = :l_filenum;
    strcpy(md5ret, l_md5cksum.arr);
    EXEC SQL COMMIT;
    return(0);
sqlerror:
end_fetch:
    EXEC SQL ROLLBACK WORK;
    printk("Error in SUMLIB_Get_MD5 for tape %s file %d\n", tapeid, filenum);
    printk("% .70s \n", sqlca.sqlerrm.sqlerrmc);
    return(1);
}

