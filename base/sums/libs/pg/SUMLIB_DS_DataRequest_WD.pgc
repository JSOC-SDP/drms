/* SUMLIB_DS_DataRequest_WD.pc
*/
/* Returns in the results keylist the wd only of the storage units for the 
 * given ds_index values.
 * The keywords in the input KEY * are like so:
 *   uid    = unique id from a SUM_open() call for this session
 *   reqcnt = number of ds_index values being requested
 *   dsix_0 = first ds_index value 
 *   dsix_1 = second ds_index value 
 *   [etc.]
 * Returns 0 on success, else error code.
 * NOTE: this is usually called with the params and results keylist the same.
*/
#include <SUM.h>
#include <sum_rpc.h>
#include <soi_error.h>
#include <printk.h>

int DS_DataRequest_WD(KEY *params, KEY **results);

int DS_DataRequest_WD(KEY *params, KEY **results)
{
  EXEC SQL TYPE uint64_t IS unsigned long long;

EXEC SQL BEGIN DECLARE SECTION;
  VARCHAR online_loc[80];
  uint64_t ds_index;
EXEC SQL END DECLARE SECTION;

   char dsix_name[128];
   char loc[80];
   int i, reqcnt;

   EXEC SQL WHENEVER NOT FOUND GOTO sqlnotfound; 
   EXEC SQL WHENEVER SQLERROR GOTO sqlerror;

    reqcnt = getkey_int(params, "reqcnt");
    for(i=0; i < reqcnt ; i++) {
      sprintf(dsix_name, "dsix_%d", i);
      if(!findkey(params, dsix_name)) {
        printk("Bad keylist given to DS_DataRequest_WD()\n");
        return(DS_DATA_REQ);
        break;
      }
      ds_index = getkey_uint64(params, dsix_name);
      EXEC SQL SELECT ONLINE_LOC
	INTO :online_loc
	FROM SUM_MAIN 
	WHERE DS_INDEX = :ds_index;

        strcpy(loc, online_loc.arr);
        sprintf(dsix_name, "wd_%d", i);
    	setkey_str(results, dsix_name, loc);
        continue;
sqlnotfound:
        printk("DS_DataRequest_WD() Data Not Found for ds_index=%ld\n",
			 ds_index);
        sprintf(dsix_name, "wd_%d", i);
    	setkey_str(results, dsix_name, "");
    }
        EXEC SQL COMMIT WORK;
	return NO_ERROR;
sqlerror:
         printk("Error in DS_DataRequest_WD\n");
         printk("% .70s \n", sqlca.sqlerrm.sqlerrmc);
         EXEC SQL WHENEVER SQLERROR CONTINUE;
         EXEC SQL ROLLBACK WORK;
         return DS_DATA_QRY;
}

