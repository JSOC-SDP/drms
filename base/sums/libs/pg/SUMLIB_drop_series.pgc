/* SUMLIB_drop_series.pgc
 * This is a function used by the delete_series program.
 * It is passed a DB table that has the list of sunum (aka ds_index)
 * values to be removed from the SUMS.
 * For each sunum will update any sum_partn_alloc del pending or archive
 * pending entry to be del pend with substatus DAAEDDP with effective
 * date of 0. A DAAEDDP substatus means a temp ds and that after the wd 
 * is removed the sum_main entry is also removed (done in SUMLIB_RmDo.pgc).
 * Returns 0 on success. 
 */
#include <SUM.h>
#include <sum_rpc.h>
#include <soi_error.h>
#include <printk.h>


int SUM_drop_series(char *tablename);

int SUM_drop_series(char *tablename) 
{
EXEC SQL BEGIN DECLARE SECTION;
  char stmt[128];
  long long int ds_index;
EXEC SQL END DECLARE SECTION;

int i, j;

  sprintf(stmt, "SELECT sunum from %s", tablename);
  EXEC SQL WHENEVER SQLERROR GOTO sqlerror;
  EXEC SQL PREPARE query FROM :stmt;
  EXEC SQL DECLARE reqcursor CURSOR FOR query;
  EXEC SQL OPEN reqcursor;

  EXEC SQL WHENEVER NOT FOUND GOTO end_fetch;

  for(i=0; ; i++) {
    EXEC SQL FETCH reqcursor INTO :ds_index;
    printk("in SUM_drop_series() ds_index = %lld\n", ds_index);
    EXEC SQL WHENEVER NOT FOUND GOTO sqllp;
    EXEC SQL UPDATE SUM_PARTN_ALLOC SET STATUS=2, ARCHIVE_SUBSTATUS=32,
	EFFECTIVE_DATE='0' WHERE DS_INDEX=:ds_index;
    EXEC SQL WHENEVER NOT FOUND GOTO end_fetch;
    continue;
sqllp:
    //no partn_alloc entry so just delete the sum_main entry
    EXEC SQL WHENEVER NOT FOUND GOTO end_loop;
    EXEC SQL DELETE FROM SUM_MAIN WHERE DS_INDEX=:ds_index;
    printk("del SUM_MAIN for ds_index=%lld\n", ds_index);
end_loop:
    EXEC SQL WHENEVER NOT FOUND GOTO end_fetch;
    continue;
  }

end_fetch:
        printk("end_fetch in SUM_drop_series()\n");
	EXEC SQL CLOSE reqcursor;
        EXEC SQL COMMIT;
	return NO_ERROR;
    
sqlerror:
	EXEC SQL CLOSE reqcursor;
        EXEC SQL COMMIT;
	printk("Error in SUM_drop_series()\n");  
	printk("% .70s \n", sqlca.sqlerrm.sqlerrmc);  
    return 1;
}
