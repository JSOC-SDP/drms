.\"
.TH drms_open_records 3  5-Jan-2007  "DRMS MANPAGE" "DRMS Programmer's Manual"
.SH NAME
drms_open_records \- Retrieve a set of records specified by a recordset query.

.SH SYNOPSIS
.nf
#include "drms.h"

DRMS_RecordSet_t *drms_open_records(DRMS_Env_t *env, char *recordsetname, 
				    int *status);

.SH DESCRIPTION

Within the current DRMS session (whose information is stored in \fIenv\fR), this function submits a database query specified in \fIrecordsetname\fR and creates a record-set structure (DRMS_RecordSet_t) to contain the results of the query.  If, at the time this function is called, a requested record structure (DRMS_Record_t) exists in the record cache (\fIenv\fR->record_cache), then a pointer to that record structure is inserted into the results record set.  Otherwise, a new record structure is created, populated from the database, inserted into the record cache, and inserted into the results record set.  The newly created record is marked read-only and assigned a permanent lifetime (DRMS_PERMANENT).

.SH RETURN VALUE

Upon successful completion, the function returns a DRMS_RecordSet_t pointer, and sets *\fIstatus\fR to DRMS_SUCCESS.  If an error occurs, the function returns NULL and sets *\fIstatus\fR to an appropriate error code defined in drms_statuscodes.h.  Typical errors are as follows.  If a problem occurs during communication with the database server, *\fIstatus\fR is set to DRMS_ERROR_QUERYFAILED.  If the number of records to be returned exceeds the allowable number, then *\fIstatus\fR is set to DRMS_QUERY_TRUNCATED.

The caller owns the allocated memory associated with the returned record set and must release it by calling drms_close_records().

.SH EXAMPLES
.nf

#include "drms.h"

int status = 0;
DRMS_RecordSet_t *recordSet = NULL;

recordSet = drms_open_records(drms_env, recSetStr, &status);
if (status == DRMS_SUCCESS && recordSet != NULL)
{
     /* Do something with recordSet here. */
}

if (recordSet != NULL)
{
     drms_close_records(recordSet, DRMS_FREE_RECORD);
}

.SH SEE ALSO

drms_clone_records(3), drms_create_records(3), drms_retrieve_records(3), drms_close_records(3)
