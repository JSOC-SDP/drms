#!/bin/bash

# syntax sl_ip_chk <master_config_file> <config_file> <node_id> <eth_alias_device>
if [ $# -ne 4 ]; then
	echo "Syntax Error:"
	echo "Usage:  $0 <master_config_file> <config_file> <current_node_id> <eth_alias_device>"
	exit
else
        mainconfig="$1"
	config_file="$2"
	currNode="$3"
	aliasDevice="$4"

        if [[ -f "$mainconfig" ]]; then   
            . "$mainconfig"
        else
            echo "ERROR: config file $mainconfig does not exist"
            exit 1
        fi

	if [[ -f $config_file ]]; then
		. $config_file 
	else
		echo "ERROR: $config_file does not exist"
		exit
	fi

	pidfn=$(basename $0).pid
	pidfile="${logDir}/$pidfn"
fi
	
chkSleep=10
maxTries=10

saveLog () {
	dt=`date +%Y_%m_%d`
	newlog="${logDir}/${dt}.sl_ip_check.cron.triggered.log"
	/bin/cp -f "${logDir}/sl_ip_check.cron.log" "$newLog"
}


fnDate=`date +%H.%M`
fName="vacuum_cron_15min.${fnDate}.log"
currDt=`date`

trap "echo 'caught a signal'; rm -f $pidfile; exit" HUP INT TERM

if [ -f $pidfile ]
then
	pid=`cat $pidfile`
	if ps -p $pid | grep -qv PID
	then
		exit
	fi
fi

echo "writing pid [$$] to  [$pidfile]"
echo $$ > $pidfile

if [ -f "$IPdownResetTrg" ]; then
	/bin/rm -f $IPdownRequest
	/bin/rm -f $IPdownSuccessTrg
	/bin/rm -f $IPdownFailedTrg
	/bin/rm -f $IPdownDieFile
	/bin/rm -f $IPdownResetTrg
fi

if [ -f "$IPdownDieFile" ]; then
	echo "dieFile Found, aborting"
	exit
fi

#--------------------------------------------------------------------
# Gets current IP address from config file based on $HOSTNAME
#--------------------------------------------------------------------
case $HOSTNAME in
hmidb0)
        currIP=$hmidb0IP
        ;;

hmidb1)
        currIP=$hmidb1IP
        ;;

hmidb2)
        currIP=$hmidb2IP
        ;;

*)
        echo "ERROR: Could not determine what host I am on"
        exit
        ;;
esac
echo "Found that with current hostname being [$HOSTNAME], current IP is [$currIP]"

	# check to see if were on the slave
echo "$kPsqlCmd -p $MASTERPORT -h $currIP -U $REPUSER $MASTERDBNAME -t -c \"select sub_provider from _$CLUSTERNAME.sl_subscribe LIMIT 1\" 2>&1"
check=`$kPsqlCmd -p $MASTERPORT -h $currIP -U $REPUSER $MASTERDBNAME -t -c "select sub_provider from _$CLUSTERNAME.sl_subscribe LIMIT 1" 2>&1`
set - $check
echo "Result is [$check]"

if [[ "$check" == "psql: FATAL:  the database system is starting up" ]]
then
        echo "I am the warm standby"
	echo "I shouldn't be running"
        exit
elif [[ "$1" == "$currNode" ]]
then
        echo "I am the master and alias device input is [$aliasDevice]"
elif [[ "$1" == "psql:" ]]
then
        echo "Database is down! Exiting"
        echo "[$check]"
        exit
elif [[ "$1" != "$currNode" ]]
then
        echo "I am the slave"
	echo "I shouldn't be running"
        exit
else
        echo "[$check]"
        exit
fi


while [ 1 -eq 1 ]; do

	if [ -f "$IPdownResetTrg" ]; then
		/bin/rm -f $IPdownRequest
		/bin/rm -f $IPdownSuccessTrg
		/bin/rm -f $IPdownFailedTrg
		/bin/rm -f $IPdownDieFile
		/bin/rm -f $IPdownResetTrg
	fi

	if [ -f "$IPdownDieFile" ]; then
		echo "dieFile Found, aborting"
		exit
	fi

	# if a trigger exists that requests the IP alias's to be brought down
	if [ -f "$IPdownRequest" ]; then
		echo "Move IP Request trigger found, initiating move...."
		echo "Writing dieFile to disable further checks"
		> $IPdownDieFile
		/bin/mv -f $IPdownRequest $IPdownRequest.working
		chmod 777 $IPdownDieFile
		ret=`/sbin/ifconfig $aliasDevice | grep "inet addr:" | wc -l`
		set - $ret
		devCount=$1
		echo "initial devCount = [$devCount]"
		try=0

		# bring down the first IP alias (the alias slony knows as the master db IP)		
		if [ $devCount -gt 0 ]; then
			echo "Bringing device [$aliasDevice] down"
			/sbin/ifconfig $aliasDevice down 
			while [ $devCount -gt 0 ]; do
				ret=`/sbin/ifconfig $aliasDevice | grep "inet addr:" | wc -l`
				set - $ret
				devCount=$1
				echo "devCount = [$devCount]"
				
				try=`expr $try + 1`
				if [ $try -ge $maxTries ]; then
					echo "Max tries reached, IP alias does not die"
					echo "ip_status=failure" > $IPdownRequest.working
					/bin/mv -f $IPdownRequest.working $IPdownFailedTrg
					chmod 777 $IPdownFailedTrg
					echo "Aborting..."
					saveLog
					exit
				fi

				if [ $devCount -gt 0 ]; then
					sleep $chkSleep
				fi
			done
			if [ $devCount -eq 0 ]; then
				echo "Success! ip alias on $aliasDevice is down."
				#/bin/mv -f $IPdownRequest.working $IPdownSuccessTrg
				#chmod 777 $IPdownSuccessTrg
				saveLog
			fi
		else
			echo "Alias not found. It must already be down."
			#/bin/mv -f $IPdownRequest.working $IPdownSuccessTrg
			#echo "chmod 777 $IPdownSuccessTrg"
			#chmod 777 $IPdownSuccessTrg
			saveLog
		fi

	# bring down the rest of the IP alias's in the alias list
	echo > $IPAliasListTemp.working
	exec < $IPAliasListTemp
        while read line
        do
                echo "[$line]"
                set - $line

                if [[ ! -n $line ]]; then
                        echo "blank line"
                        continue
                fi

                aliasDevice=$1
                ret=`/sbin/ifconfig $aliasDevice | grep "inet addr:" | wc -l`
                set - $ret
                devCount=$1
                echo "devcount is [$devCount]"

                # for each line in the alias list file, if the device exists, attempt to bring it down
                if [[ $devCount -gt 0 ]]; then
                        echo "Device exists, bringing alias down"
                        /sbin/ifconfig $aliasDevice down

                        counter=0
                        while [[ $counter -le $maxTries ]]; do
                                ret=`/sbin/ifconfig $aliasDevice | grep "inet addr:" | wc -l`
                                set - $ret
                                devCount=$1
                                echo "devcount [$devCount]"

                                # if the device was found again, then attempt to bring it down.
                                if [[ $devCount -gt 0 ]]; then
                                        echo "device still online, attempting to bring down again"
					/sbin/ifconfig $aliasDevice down
	
                                else
                                        # if no device was found, then bringing down was successful
                                        echo "device down, moving to the next one"
					echo "$line" >> $IPAliasListTemp.working
                                        break
                                fi

                                if [[ $counter -eq $maxTries ]]; then
                                        # if the maximum numb er of tries is reached, go to the next alias device
                                        echo "maximum number of attempts reached, could not bring it down"
                                        echo "could not bring device $aliasDevice down" >> $IPdownRequest.working
                                fi

                                sleep 1
                                counter=$(($counter + 1 ))

                        done

                fi
                echo



        done

	# after attempting to bring down the main alias (and it was a success) 
	# and the other alias's (whether fail or success), clean up
        echo "Done attempting to bring all alias's down"
	rm -f $IPAliasListTemp
	mv -f $IPAliasListTemp.working $IPAliasListTemp
	echo "ip_status=success" >> $IPdownRequest.working
	/bin/mv -f $IPdownRequest.working $IPdownSuccessTrg
	echo "chmod 777 $IPdownSuccessTrg"
	chmod 777 $IPdownSuccessTrg

	else
		sleep $sleepTime
	fi

done
