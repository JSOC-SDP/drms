#!/bin/bash

if [ $# -eq 1 ]
then
	config_file="$1"
else
	error="ERROR: Usage: $0 <configuration file>"
	echo $error
	exit
fi

# parse config file - should 
. "$config_file"

# Do not parse logs if archivelogs.pl is currently archiving them; so wrap this
# function in a call to drms_flock.pl

# prep_cfg has a list of all site dirs that need parsing. For each site dir,
# the path to .lst file is listed. This file contains all the series
# of interest to the site. The .lst files and prep_cfg file are generated by subscription_manager
# (subscription_update actually).

logs2skip=2
currDt=`date`

pidfn=$(basename $0).pid
pidfile="$kPSLworkDir/$pidfn"

trap "echo 'caught a signal'; rm -f $pidfile; exit" HUP INT TERM

if [ -f $pidfile ]
then
    pid=`cat $pidfile`
    if ps -p $pid | grep -qv PID
    then
        echo "somebody else is running at [$currDt]"
        exit
    else
        echo "found orphaned pid file at [$currDt]"
    fi
fi

echo $$ > $pidfile

echo "Running [$0] at [$currDt]"

process_logs=0

#ls -1tr $kPSLlogsSourceDir/*.sql > $kPSLworkDir/src.lst
ls -1tr $kPSLlogsSourceDir > $kPSLworkDir/src.lst.2
grep ".sql$" $kPSLworkDir/src.lst.2 >  $kPSLworkDir/src.lst
/bin/rm -f $kPSLworkDir/src.lst.2

# $kPSLworkDir/src.lst has a list of all files that have not been parsed yet.

tmpLine=`wc -l $kPSLworkDir/src.lst`
set - $tmpLine
lineCnt=$1
echo "found [$lineCnt] logs"

if [ $lineCnt -lt 1 ]; then
	echo -e "\nno logs to process...\nAborting\n"
	/bin/rm -f $kPSLworkDir/src.lst
	exit
else
	lineCnt=`expr $lineCnt - $logs2skip`
	echo "set counter (logs to process) to [$lineCnt]"
fi

if [ $lineCnt -lt 1 ] ; then
	echo -e "\nno logs to process...\nAborting\n"
	/bin/rm -f $kPSLworkDir/src.lst
	exit
fi

proc_cntr=0


for I in `cat $kPSLworkDir/src.lst`; do
	echo "Parsing [$proc_cntr][$I]"
	$kPSLprepBin ${kPSLlogsSourceDir}/${I} $kPSLprepCfg $kPSLprepLog
	wait
	echo "renaming [$I]"
	/bin/mv -f  ${kPSLlogsSourceDir}/${I} ${kPSLlogsSourceDir}/${I}.parsed
	proc_cntr=`expr $proc_cntr + 1`
	if [ $proc_cntr -ge $lineCnt ] ; then
		break
	fi
done

/bin/rm -f $kPSLworkDir/src.lst
rm -f $pidfile
